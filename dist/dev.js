!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var i=function(t,e){return t<e?-1:t>e?1:t>=e?0:NaN},r=function(t){var e;return 1===t.length&&(e=t,t=function(t,n){return i(e(t),n)}),{left:function(e,n,i,r){for(null==i&&(i=0),null==r&&(r=e.length);i<r;){var a=i+r>>>1;t(e[a],n)<0?i=a+1:r=a}return i},right:function(e,n,i,r){for(null==i&&(i=0),null==r&&(r=e.length);i<r;){var a=i+r>>>1;t(e[a],n)>0?r=a:i=a+1}return i}}};var a=r(i);a.right,a.left;var f=Array.prototype;f.slice,f.map,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var o=function(t){for(var e,n,i,r=t.length,a=-1,f=0;++a<r;)f+=t[a].length;for(n=new Array(f);--r>=0;)for(e=(i=t[r]).length;--e>=0;)n[--f]=i[e];return n};Array.prototype.slice;var c={value:function(){}};function s(){for(var t,e=0,n=arguments.length,i={};e<n;++e){if(!(t=arguments[e]+"")||t in i)throw new Error("illegal type: "+t);i[t]=[]}return new u(i)}function u(t){this._=t}function h(t,e){for(var n,i=0,r=t.length;i<r;++i)if((n=t[i]).name===e)return n.value}function l(t,e,n){for(var i=0,r=t.length;i<r;++i)if(t[i].name===e){t[i]=c,t=t.slice(0,i).concat(t.slice(i+1));break}return null!=n&&t.push({name:e,value:n}),t}u.prototype=s.prototype={constructor:u,on:function(t,e){var n,i,r=this._,a=(i=r,(t+"").trim().split(/^|\s+/).map(function(t){var e="",n=t.indexOf(".");if(n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),t&&!i.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})),f=-1,o=a.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++f<o;)if(n=(t=a[f]).type)r[n]=l(r[n],t.name,e);else if(null==e)for(n in r)r[n]=l(r[n],t.name,null);return this}for(;++f<o;)if((n=(t=a[f]).type)&&(n=h(r[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new u(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,i,r=new Array(n),a=0;a<n;++a)r[a]=arguments[a+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(a=0,n=(i=this._[t]).length;a<n;++a)i[a].value.apply(e,r)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var i=this._[t],r=0,a=i.length;r<a;++r)i[r].value.apply(e,n)}};var d=s,_="http://www.w3.org/1999/xhtml",b={svg:"http://www.w3.org/2000/svg",xhtml:_,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},p=function(t){var e=t+="",n=e.indexOf(":");return n>=0&&"xmlns"!==(e=t.slice(0,n))&&(t=t.slice(n+1)),b.hasOwnProperty(e)?{space:b[e],local:t}:t};var y=function(t){var e=p(t);return(e.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===_&&e.documentElement.namespaceURI===_?e.createElement(t):e.createElementNS(n,t)}})(e)};function v(){}var g=function(t){return null==t?v:function(){return this.querySelector(t)}};function x(){return[]}var m=function(t){return null==t?x:function(){return this.querySelectorAll(t)}},w=function(t){return function(){return this.matches(t)}},M=function(t){return new Array(t.length)};function T(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}T.prototype={constructor:T,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var N="$";function A(t,e,n,i,r,a){for(var f,o=0,c=e.length,s=a.length;o<s;++o)(f=e[o])?(f.__data__=a[o],i[o]=f):n[o]=new T(t,a[o]);for(;o<c;++o)(f=e[o])&&(r[o]=f)}function C(t,e,n,i,r,a,f){var o,c,s,u={},h=e.length,l=a.length,d=new Array(h);for(o=0;o<h;++o)(c=e[o])&&(d[o]=s=N+f.call(c,c.__data__,o,e),s in u?r[o]=c:u[s]=c);for(o=0;o<l;++o)(c=u[s=N+f.call(t,a[o],o,a)])?(i[o]=c,c.__data__=a[o],u[s]=null):n[o]=new T(t,a[o]);for(o=0;o<h;++o)(c=e[o])&&u[d[o]]===c&&(r[o]=c)}function k(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}var S=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function E(t,e){return t.style.getPropertyValue(e)||S(t).getComputedStyle(t,null).getPropertyValue(e)}function U(t){return t.trim().split(/^|\s+/)}function P(t){return t.classList||new L(t)}function L(t){this._node=t,this._names=U(t.getAttribute("class")||"")}function D(t,e){for(var n=P(t),i=-1,r=e.length;++i<r;)n.add(e[i])}function R(t,e){for(var n=P(t),i=-1,r=e.length;++i<r;)n.remove(e[i])}L.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function j(){this.textContent=""}function Y(){this.innerHTML=""}function F(){this.nextSibling&&this.parentNode.appendChild(this)}function O(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function q(){return null}function H(){var t=this.parentNode;t&&t.removeChild(this)}function z(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function I(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var $={},X=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||($={mouseenter:"mouseover",mouseleave:"mouseout"}));function B(t,e,n){return t=Z(t,e,n),function(e){var n=e.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||t.call(this,e)}}function Z(t,e,n){return function(i){var r=X;X=i;try{t.call(this,this.__data__,e,n)}finally{X=r}}}function V(t){return function(){var e=this.__on;if(e){for(var n,i=0,r=-1,a=e.length;i<a;++i)n=e[i],t.type&&n.type!==t.type||n.name!==t.name?e[++r]=n:this.removeEventListener(n.type,n.listener,n.capture);++r?e.length=r:delete this.__on}}}function W(t,e,n){var i=$.hasOwnProperty(t.type)?B:Z;return function(r,a,f){var o,c=this.__on,s=i(e,a,f);if(c)for(var u=0,h=c.length;u<h;++u)if((o=c[u]).type===t.type&&o.name===t.name)return this.removeEventListener(o.type,o.listener,o.capture),this.addEventListener(o.type,o.listener=s,o.capture=n),void(o.value=e);this.addEventListener(t.type,s,n),o={type:t.type,name:t.name,value:e,listener:s,capture:n},c?c.push(o):this.__on=[o]}}function Q(t,e,n){var i=S(t),r=i.CustomEvent;"function"==typeof r?r=new r(e,n):(r=i.document.createEvent("Event"),n?(r.initEvent(e,n.bubbles,n.cancelable),r.detail=n.detail):r.initEvent(e,!1,!1)),t.dispatchEvent(r)}var J=[null];function G(t,e){this._groups=t,this._parents=e}function K(){return new G([[document.documentElement]],J)}G.prototype=K.prototype={constructor:G,select:function(t){"function"!=typeof t&&(t=g(t));for(var e=this._groups,n=e.length,i=new Array(n),r=0;r<n;++r)for(var a,f,o=e[r],c=o.length,s=i[r]=new Array(c),u=0;u<c;++u)(a=o[u])&&(f=t.call(a,a.__data__,u,o))&&("__data__"in a&&(f.__data__=a.__data__),s[u]=f);return new G(i,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=m(t));for(var e=this._groups,n=e.length,i=[],r=[],a=0;a<n;++a)for(var f,o=e[a],c=o.length,s=0;s<c;++s)(f=o[s])&&(i.push(t.call(f,f.__data__,s,o)),r.push(f));return new G(i,r)},filter:function(t){"function"!=typeof t&&(t=w(t));for(var e=this._groups,n=e.length,i=new Array(n),r=0;r<n;++r)for(var a,f=e[r],o=f.length,c=i[r]=[],s=0;s<o;++s)(a=f[s])&&t.call(a,a.__data__,s,f)&&c.push(a);return new G(i,this._parents)},data:function(t,e){if(!t)return _=new Array(this.size()),u=-1,this.each(function(t){_[++u]=t}),_;var n,i=e?C:A,r=this._parents,a=this._groups;"function"!=typeof t&&(n=t,t=function(){return n});for(var f=a.length,o=new Array(f),c=new Array(f),s=new Array(f),u=0;u<f;++u){var h=r[u],l=a[u],d=l.length,_=t.call(h,h&&h.__data__,u,r),b=_.length,p=c[u]=new Array(b),y=o[u]=new Array(b);i(h,l,p,y,s[u]=new Array(d),_,e);for(var v,g,x=0,m=0;x<b;++x)if(v=p[x]){for(x>=m&&(m=x+1);!(g=y[m])&&++m<b;);v._next=g||null}}return(o=new G(o,r))._enter=c,o._exit=s,o},enter:function(){return new G(this._enter||this._groups.map(M),this._parents)},exit:function(){return new G(this._exit||this._groups.map(M),this._parents)},join:function(t,e,n){var i=this.enter(),r=this,a=this.exit();return i="function"==typeof t?t(i):i.append(t+""),null!=e&&(r=e(r)),null==n?a.remove():n(a),i&&r?i.merge(r).order():r},merge:function(t){for(var e=this._groups,n=t._groups,i=e.length,r=n.length,a=Math.min(i,r),f=new Array(i),o=0;o<a;++o)for(var c,s=e[o],u=n[o],h=s.length,l=f[o]=new Array(h),d=0;d<h;++d)(c=s[d]||u[d])&&(l[d]=c);for(;o<i;++o)f[o]=e[o];return new G(f,this._parents)},order:function(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var i,r=t[e],a=r.length-1,f=r[a];--a>=0;)(i=r[a])&&(f&&4^i.compareDocumentPosition(f)&&f.parentNode.insertBefore(i,f),f=i);return this},sort:function(t){function e(e,n){return e&&n?t(e.__data__,n.__data__):!e-!n}t||(t=k);for(var n=this._groups,i=n.length,r=new Array(i),a=0;a<i;++a){for(var f,o=n[a],c=o.length,s=r[a]=new Array(c),u=0;u<c;++u)(f=o[u])&&(s[u]=f);s.sort(e)}return new G(r,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),e=-1;return this.each(function(){t[++e]=this}),t},node:function(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var i=t[e],r=0,a=i.length;r<a;++r){var f=i[r];if(f)return f}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var e=this._groups,n=0,i=e.length;n<i;++n)for(var r,a=e[n],f=0,o=a.length;f<o;++f)(r=a[f])&&t.call(r,r.__data__,f,a);return this},attr:function(t,e){var n=p(t);if(arguments.length<2){var i=this.node();return n.local?i.getAttributeNS(n.space,n.local):i.getAttribute(n)}return this.each((null==e?n.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof e?n.local?function(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}:function(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttribute(t):this.setAttribute(t,n)}}:n.local?function(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}:function(t,e){return function(){this.setAttribute(t,e)}})(n,e))},style:function(t,e,n){return arguments.length>1?this.each((null==e?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof e?function(t,e,n){return function(){var i=e.apply(this,arguments);null==i?this.style.removeProperty(t):this.style.setProperty(t,i,n)}}:function(t,e,n){return function(){this.style.setProperty(t,e,n)}})(t,e,null==n?"":n)):E(this.node(),t)},property:function(t,e){return arguments.length>1?this.each((null==e?function(t){return function(){delete this[t]}}:"function"==typeof e?function(t,e){return function(){var n=e.apply(this,arguments);null==n?delete this[t]:this[t]=n}}:function(t,e){return function(){this[t]=e}})(t,e)):this.node()[t]},classed:function(t,e){var n=U(t+"");if(arguments.length<2){for(var i=P(this.node()),r=-1,a=n.length;++r<a;)if(!i.contains(n[r]))return!1;return!0}return this.each(("function"==typeof e?function(t,e){return function(){(e.apply(this,arguments)?D:R)(this,t)}}:e?function(t){return function(){D(this,t)}}:function(t){return function(){R(this,t)}})(n,e))},text:function(t){return arguments.length?this.each(null==t?j:("function"==typeof t?function(t){return function(){var e=t.apply(this,arguments);this.textContent=null==e?"":e}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Y:("function"==typeof t?function(t){return function(){var e=t.apply(this,arguments);this.innerHTML=null==e?"":e}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(F)},lower:function(){return this.each(O)},append:function(t){var e="function"==typeof t?t:y(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})},insert:function(t,e){var n="function"==typeof t?t:y(t),i=null==e?q:"function"==typeof e?e:g(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),i.apply(this,arguments)||null)})},remove:function(){return this.each(H)},clone:function(t){return this.select(t?I:z)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,e,n){var i,r,a=function(t){return t.trim().split(/^|\s+/).map(function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}})}(t+""),f=a.length;if(!(arguments.length<2)){for(o=e?W:V,null==n&&(n=!1),i=0;i<f;++i)this.each(o(a[i],e,n));return this}var o=this.node().__on;if(o)for(var c,s=0,u=o.length;s<u;++s)for(i=0,c=o[s];i<f;++i)if((r=a[i]).type===c.type&&r.name===c.name)return c.value},dispatch:function(t,e){return this.each(("function"==typeof e?function(t,e){return function(){return Q(this,t,e.apply(this,arguments))}}:function(t,e){return function(){return Q(this,t,e)}})(t,e))}};var tt=K,et=function(t){return"string"==typeof t?new G([[document.querySelector(t)]],[document.documentElement]):new G([[t]],J)},nt=0;function it(){this._="@"+(++nt).toString(36)}it.prototype=function(){return new it}.prototype={constructor:it,get:function(t){for(var e=this._;!(e in t);)if(!(t=t.parentNode))return;return t[e]},set:function(t,e){return t[this._]=e},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};function rt(t,e,n,i,r,a,f,o,c,s){this.target=t,this.type=e,this.subject=n,this.identifier=i,this.active=r,this.x=a,this.y=f,this.dx=o,this.dy=c,this._=s}rt.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var at=function(t,e,n){t.prototype=e.prototype=n,n.constructor=t};function ft(t,e){var n=Object.create(t.prototype);for(var i in e)n[i]=e[i];return n}function ot(){}var ct="\\s*([+-]?\\d+)\\s*",st="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",ut="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",ht=/^#([0-9a-f]{3})$/,lt=/^#([0-9a-f]{6})$/,dt=new RegExp("^rgb\\("+[ct,ct,ct]+"\\)$"),_t=new RegExp("^rgb\\("+[ut,ut,ut]+"\\)$"),bt=new RegExp("^rgba\\("+[ct,ct,ct,st]+"\\)$"),pt=new RegExp("^rgba\\("+[ut,ut,ut,st]+"\\)$"),yt=new RegExp("^hsl\\("+[st,ut,ut]+"\\)$"),vt=new RegExp("^hsla\\("+[st,ut,ut,st]+"\\)$"),gt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function xt(t){var e;return t=(t+"").trim().toLowerCase(),(e=ht.exec(t))?new Nt((e=parseInt(e[1],16))>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):(e=lt.exec(t))?mt(parseInt(e[1],16)):(e=dt.exec(t))?new Nt(e[1],e[2],e[3],1):(e=_t.exec(t))?new Nt(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=bt.exec(t))?wt(e[1],e[2],e[3],e[4]):(e=pt.exec(t))?wt(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=yt.exec(t))?Ct(e[1],e[2]/100,e[3]/100,1):(e=vt.exec(t))?Ct(e[1],e[2]/100,e[3]/100,e[4]):gt.hasOwnProperty(t)?mt(gt[t]):"transparent"===t?new Nt(NaN,NaN,NaN,0):null}function mt(t){return new Nt(t>>16&255,t>>8&255,255&t,1)}function wt(t,e,n,i){return i<=0&&(t=e=n=NaN),new Nt(t,e,n,i)}function Mt(t){return t instanceof ot||(t=xt(t)),t?new Nt((t=t.rgb()).r,t.g,t.b,t.opacity):new Nt}function Tt(t,e,n,i){return 1===arguments.length?Mt(t):new Nt(t,e,n,null==i?1:i)}function Nt(t,e,n,i){this.r=+t,this.g=+e,this.b=+n,this.opacity=+i}function At(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Ct(t,e,n,i){return i<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new St(t,e,n,i)}function kt(t,e,n,i){return 1===arguments.length?function(t){if(t instanceof St)return new St(t.h,t.s,t.l,t.opacity);if(t instanceof ot||(t=xt(t)),!t)return new St;if(t instanceof St)return t;var e=(t=t.rgb()).r/255,n=t.g/255,i=t.b/255,r=Math.min(e,n,i),a=Math.max(e,n,i),f=NaN,o=a-r,c=(a+r)/2;return o?(f=e===a?(n-i)/o+6*(n<i):n===a?(i-e)/o+2:(e-n)/o+4,o/=c<.5?a+r:2-a-r,f*=60):o=c>0&&c<1?0:f,new St(f,o,c,t.opacity)}(t):new St(t,e,n,null==i?1:i)}function St(t,e,n,i){this.h=+t,this.s=+e,this.l=+n,this.opacity=+i}function Et(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}at(ot,xt,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),at(Nt,Tt,ft(ot,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Nt(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Nt(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+At(this.r)+At(this.g)+At(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),at(St,kt,ft(ot,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new St(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new St(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,i=n+(n<.5?n:1-n)*e,r=2*n-i;return new Nt(Et(t>=240?t-240:t+120,r,i),Et(t,r,i),Et(t<120?t+240:t-120,r,i),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Ut=Math.PI/180,Pt=180/Math.PI,Lt=.96422,Dt=1,Rt=.82521,jt=4/29,Yt=6/29,Ft=3*Yt*Yt,Ot=Yt*Yt*Yt;function qt(t){if(t instanceof zt)return new zt(t.l,t.a,t.b,t.opacity);if(t instanceof Wt){if(isNaN(t.h))return new zt(t.l,0,0,t.opacity);var e=t.h*Ut;return new zt(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}t instanceof Nt||(t=Mt(t));var n,i,r=Bt(t.r),a=Bt(t.g),f=Bt(t.b),o=It((.2225045*r+.7168786*a+.0606169*f)/Dt);return r===a&&a===f?n=i=o:(n=It((.4360747*r+.3850649*a+.1430804*f)/Lt),i=It((.0139322*r+.0971045*a+.7141733*f)/Rt)),new zt(116*o-16,500*(n-o),200*(o-i),t.opacity)}function Ht(t,e,n,i){return 1===arguments.length?qt(t):new zt(t,e,n,null==i?1:i)}function zt(t,e,n,i){this.l=+t,this.a=+e,this.b=+n,this.opacity=+i}function It(t){return t>Ot?Math.pow(t,1/3):t/Ft+jt}function $t(t){return t>Yt?t*t*t:Ft*(t-jt)}function Xt(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Bt(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Zt(t){if(t instanceof Wt)return new Wt(t.h,t.c,t.l,t.opacity);if(t instanceof zt||(t=qt(t)),0===t.a&&0===t.b)return new Wt(NaN,0,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*Pt;return new Wt(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Vt(t,e,n,i){return 1===arguments.length?Zt(t):new Wt(t,e,n,null==i?1:i)}function Wt(t,e,n,i){this.h=+t,this.c=+e,this.l=+n,this.opacity=+i}at(zt,Ht,ft(ot,{brighter:function(t){return new zt(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new zt(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return new Nt(Xt(3.1338561*(e=Lt*$t(e))-1.6168667*(t=Dt*$t(t))-.4906146*(n=Rt*$t(n))),Xt(-.9787684*e+1.9161415*t+.033454*n),Xt(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}})),at(Wt,Vt,ft(ot,{brighter:function(t){return new Wt(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Wt(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return qt(this).rgb()}}));var Qt=-.29227,Jt=-.90649,Gt=1.97294,Kt=Gt*Jt,te=1.78277*Gt,ee=1.78277*Qt- -.14861*Jt;function ne(t,e,n,i){return 1===arguments.length?function(t){if(t instanceof ie)return new ie(t.h,t.s,t.l,t.opacity);t instanceof Nt||(t=Mt(t));var e=t.r/255,n=t.g/255,i=t.b/255,r=(ee*i+Kt*e-te*n)/(ee+Kt-te),a=i-r,f=(Gt*(n-r)-Qt*a)/Jt,o=Math.sqrt(f*f+a*a)/(Gt*r*(1-r)),c=o?Math.atan2(f,a)*Pt-120:NaN;return new ie(c<0?c+360:c,o,r,t.opacity)}(t):new ie(t,e,n,null==i?1:i)}function ie(t,e,n,i){this.h=+t,this.s=+e,this.l=+n,this.opacity=+i}function re(t,e,n,i,r){var a=t*t,f=a*t;return((1-3*t+3*a-f)*e+(4-6*a+3*f)*n+(1+3*t+3*a-3*f)*i+f*r)/6}at(ie,ne,ft(ot,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new ie(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new ie(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Ut,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),i=Math.cos(t),r=Math.sin(t);return new Nt(255*(e+n*(-.14861*i+1.78277*r)),255*(e+n*(Qt*i+Jt*r)),255*(e+n*(Gt*i)),this.opacity)}}));var ae=function(t){return function(){return t}};function fe(t,e){return function(n){return t+n*e}}function oe(t,e){var n=e-t;return n?fe(t,n>180||n<-180?n-360*Math.round(n/360):n):ae(isNaN(t)?e:t)}function ce(t){return 1==(t=+t)?se:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(i){return Math.pow(t+i*e,n)}}(e,n,t):ae(isNaN(e)?n:e)}}function se(t,e){var n=e-t;return n?fe(t,n):ae(isNaN(t)?e:t)}var ue=function t(e){var n=ce(e);function i(t,e){var i=n((t=Tt(t)).r,(e=Tt(e)).r),r=n(t.g,e.g),a=n(t.b,e.b),f=se(t.opacity,e.opacity);return function(e){return t.r=i(e),t.g=r(e),t.b=a(e),t.opacity=f(e),t+""}}return i.gamma=t,i}(1);function he(t){return function(e){var n,i,r=e.length,a=new Array(r),f=new Array(r),o=new Array(r);for(n=0;n<r;++n)i=Tt(e[n]),a[n]=i.r||0,f[n]=i.g||0,o[n]=i.b||0;return a=t(a),f=t(f),o=t(o),i.opacity=1,function(t){return i.r=a(t),i.g=f(t),i.b=o(t),i+""}}}var le=he(function(t){var e=t.length-1;return function(n){var i=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),r=t[i],a=t[i+1],f=i>0?t[i-1]:2*r-a,o=i<e-1?t[i+2]:2*a-r;return re((n-i/e)*e,f,r,a,o)}}),de=(he(function(t){var e=t.length;return function(n){var i=Math.floor(((n%=1)<0?++n:n)*e),r=t[(i+e-1)%e],a=t[i%e],f=t[(i+1)%e],o=t[(i+2)%e];return re((n-i/e)*e,r,a,f,o)}}),function(t,e){return e-=t=+t,function(n){return t+e*n}}),_e=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,be=new RegExp(_e.source,"g");var pe,ye,ve,ge,xe=function(t,e){var n,i,r,a=_e.lastIndex=be.lastIndex=0,f=-1,o=[],c=[];for(t+="",e+="";(n=_e.exec(t))&&(i=be.exec(e));)(r=i.index)>a&&(r=e.slice(a,r),o[f]?o[f]+=r:o[++f]=r),(n=n[0])===(i=i[0])?o[f]?o[f]+=i:o[++f]=i:(o[++f]=null,c.push({i:f,x:de(n,i)})),a=be.lastIndex;return a<e.length&&(r=e.slice(a),o[f]?o[f]+=r:o[++f]=r),o.length<2?c[0]?function(t){return function(e){return t(e)+""}}(c[0].x):function(t){return function(){return t}}(e):(e=c.length,function(t){for(var n,i=0;i<e;++i)o[(n=c[i]).i]=n.x(t);return o.join("")})},me=180/Math.PI,we={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Me=function(t,e,n,i,r,a){var f,o,c;return(f=Math.sqrt(t*t+e*e))&&(t/=f,e/=f),(c=t*n+e*i)&&(n-=t*c,i-=e*c),(o=Math.sqrt(n*n+i*i))&&(n/=o,i/=o,c/=o),t*i<e*n&&(t=-t,e=-e,c=-c,f=-f),{translateX:r,translateY:a,rotate:Math.atan2(e,t)*me,skewX:Math.atan(c)*me,scaleX:f,scaleY:o}};function Te(t,e,n,i){function r(t){return t.length?t.pop()+" ":""}return function(a,f){var o=[],c=[];return a=t(a),f=t(f),function(t,i,r,a,f,o){if(t!==r||i!==a){var c=f.push("translate(",null,e,null,n);o.push({i:c-4,x:de(t,r)},{i:c-2,x:de(i,a)})}else(r||a)&&f.push("translate("+r+e+a+n)}(a.translateX,a.translateY,f.translateX,f.translateY,o,c),function(t,e,n,a){t!==e?(t-e>180?e+=360:e-t>180&&(t+=360),a.push({i:n.push(r(n)+"rotate(",null,i)-2,x:de(t,e)})):e&&n.push(r(n)+"rotate("+e+i)}(a.rotate,f.rotate,o,c),function(t,e,n,a){t!==e?a.push({i:n.push(r(n)+"skewX(",null,i)-2,x:de(t,e)}):e&&n.push(r(n)+"skewX("+e+i)}(a.skewX,f.skewX,o,c),function(t,e,n,i,a,f){if(t!==n||e!==i){var o=a.push(r(a)+"scale(",null,",",null,")");f.push({i:o-4,x:de(t,n)},{i:o-2,x:de(e,i)})}else 1===n&&1===i||a.push(r(a)+"scale("+n+","+i+")")}(a.scaleX,a.scaleY,f.scaleX,f.scaleY,o,c),a=f=null,function(t){for(var e,n=-1,i=c.length;++n<i;)o[(e=c[n]).i]=e.x(t);return o.join("")}}}var Ne=Te(function(t){return"none"===t?we:(pe||(pe=document.createElement("DIV"),ye=document.documentElement,ve=document.defaultView),pe.style.transform=t,t=ve.getComputedStyle(ye.appendChild(pe),null).getPropertyValue("transform"),ye.removeChild(pe),t=t.slice(7,-1).split(","),Me(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),Ae=Te(function(t){return null==t?we:(ge||(ge=document.createElementNS("http://www.w3.org/2000/svg","g")),ge.setAttribute("transform",t),(t=ge.transform.baseVal.consolidate())?(t=t.matrix,Me(t.a,t.b,t.c,t.d,t.e,t.f)):we)},", ",")",")");Math.SQRT2;function Ce(t){return function(e,n){var i=t((e=kt(e)).h,(n=kt(n)).h),r=se(e.s,n.s),a=se(e.l,n.l),f=se(e.opacity,n.opacity);return function(t){return e.h=i(t),e.s=r(t),e.l=a(t),e.opacity=f(t),e+""}}}Ce(oe),Ce(se);function ke(t){return function(e,n){var i=t((e=Vt(e)).h,(n=Vt(n)).h),r=se(e.c,n.c),a=se(e.l,n.l),f=se(e.opacity,n.opacity);return function(t){return e.h=i(t),e.c=r(t),e.l=a(t),e.opacity=f(t),e+""}}}ke(oe),ke(se);function Se(t){return function e(n){function i(e,i){var r=t((e=ne(e)).h,(i=ne(i)).h),a=se(e.s,i.s),f=se(e.l,i.l),o=se(e.opacity,i.opacity);return function(t){return e.h=r(t),e.s=a(t),e.l=f(Math.pow(t,n)),e.opacity=o(t),e+""}}return n=+n,i.gamma=e,i}(1)}Se(oe);var Ee=Se(se);var Ue,Pe,Le=0,De=0,Re=0,je=1e3,Ye=0,Fe=0,Oe=0,qe="object"==typeof performance&&performance.now?performance:Date,He="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function ze(){return Fe||(He(Ie),Fe=qe.now()+Oe)}function Ie(){Fe=0}function $e(){this._call=this._time=this._next=null}function Xe(t,e,n){var i=new $e;return i.restart(t,e,n),i}function Be(){Fe=(Ye=qe.now())+Oe,Le=De=0;try{!function(){ze(),++Le;for(var t,e=Ue;e;)(t=Fe-e._time)>=0&&e._call.call(null,t),e=e._next;--Le}()}finally{Le=0,function(){var t,e,n=Ue,i=1/0;for(;n;)n._call?(i>n._time&&(i=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:Ue=e);Pe=t,Ve(i)}(),Fe=0}}function Ze(){var t=qe.now(),e=t-Ye;e>je&&(Oe-=e,Ye=t)}function Ve(t){Le||(De&&(De=clearTimeout(De)),t-Fe>24?(t<1/0&&(De=setTimeout(Be,t-qe.now()-Oe)),Re&&(Re=clearInterval(Re))):(Re||(Ye=qe.now(),Re=setInterval(Ze,je)),Le=1,He(Be)))}$e.prototype=Xe.prototype={constructor:$e,restart:function(t,e,n){if("function"!=typeof t)throw new TypeError("callback is not a function");n=(null==n?ze():+n)+(null==e?0:+e),this._next||Pe===this||(Pe?Pe._next=this:Ue=this,Pe=this),this._call=t,this._time=n,Ve()},stop:function(){this._call&&(this._call=null,this._time=1/0,Ve())}};var We=function(t,e,n){var i=new $e;return e=null==e?0:+e,i.restart(function(n){i.stop(),t(n+e)},e,n),i},Qe=d("start","end","cancel","interrupt"),Je=[],Ge=0,Ke=1,tn=2,en=3,nn=4,rn=5,an=6,fn=function(t,e,n,i,r,a){var f=t.__transition;if(f){if(n in f)return}else t.__transition={};!function(t,e,n){var i,r=t.__transition;function a(c){var s,u,h,l;if(n.state!==Ke)return o();for(s in r)if((l=r[s]).name===n.name){if(l.state===en)return We(a);l.state===nn?(l.state=an,l.timer.stop(),l.on.call("interrupt",t,t.__data__,l.index,l.group),delete r[s]):+s<e&&(l.state=an,l.timer.stop(),l.on.call("cancel",t,t.__data__,l.index,l.group),delete r[s])}if(We(function(){n.state===en&&(n.state=nn,n.timer.restart(f,n.delay,n.time),f(c))}),n.state=tn,n.on.call("start",t,t.__data__,n.index,n.group),n.state===tn){for(n.state=en,i=new Array(h=n.tween.length),s=0,u=-1;s<h;++s)(l=n.tween[s].value.call(t,t.__data__,n.index,n.group))&&(i[++u]=l);i.length=u+1}}function f(e){for(var r=e<n.duration?n.ease.call(null,e/n.duration):(n.timer.restart(o),n.state=rn,1),a=-1,f=i.length;++a<f;)i[a].call(t,r);n.state===rn&&(n.on.call("end",t,t.__data__,n.index,n.group),o())}function o(){for(var i in n.state=an,n.timer.stop(),delete r[e],r)return;delete t.__transition}r[e]=n,n.timer=Xe(function(t){n.state=Ke,n.timer.restart(a,n.delay,n.time),n.delay<=t&&a(t-n.delay)},0,n.time)}(t,n,{name:e,index:i,group:r,on:Qe,tween:Je,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:Ge})};function on(t,e){var n=sn(t,e);if(n.state>Ge)throw new Error("too late; already scheduled");return n}function cn(t,e){var n=sn(t,e);if(n.state>en)throw new Error("too late; already running");return n}function sn(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}var un=function(t,e){var n,i,r,a=t.__transition,f=!0;if(a){for(r in e=null==e?null:e+"",a)(n=a[r]).name===e?(i=n.state>tn&&n.state<rn,n.state=an,n.timer.stop(),n.on.call(i?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete a[r]):f=!1;f&&delete t.__transition}};function hn(t,e,n){var i=t._id;return t.each(function(){var t=cn(this,i);(t.value||(t.value={}))[e]=n.apply(this,arguments)}),function(t){return sn(t,i).value[e]}}var ln=function(t,e){var n;return("number"==typeof e?de:e instanceof xt?ue:(n=xt(e))?(e=n,ue):xe)(t,e)};var dn=tt.prototype.constructor;function _n(t){return function(){this.style.removeProperty(t)}}var bn=0;function pn(t,e,n,i){this._groups=t,this._parents=e,this._name=n,this._id=i}function yn(){return++bn}var vn=tt.prototype;pn.prototype=function(t){return tt().transition(t)}.prototype={constructor:pn,select:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=g(t));for(var i=this._groups,r=i.length,a=new Array(r),f=0;f<r;++f)for(var o,c,s=i[f],u=s.length,h=a[f]=new Array(u),l=0;l<u;++l)(o=s[l])&&(c=t.call(o,o.__data__,l,s))&&("__data__"in o&&(c.__data__=o.__data__),h[l]=c,fn(h[l],e,n,l,h,sn(o,n)));return new pn(a,this._parents,e,n)},selectAll:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=m(t));for(var i=this._groups,r=i.length,a=[],f=[],o=0;o<r;++o)for(var c,s=i[o],u=s.length,h=0;h<u;++h)if(c=s[h]){for(var l,d=t.call(c,c.__data__,h,s),_=sn(c,n),b=0,p=d.length;b<p;++b)(l=d[b])&&fn(l,e,n,b,d,_);a.push(d),f.push(c)}return new pn(a,f,e,n)},filter:function(t){"function"!=typeof t&&(t=w(t));for(var e=this._groups,n=e.length,i=new Array(n),r=0;r<n;++r)for(var a,f=e[r],o=f.length,c=i[r]=[],s=0;s<o;++s)(a=f[s])&&t.call(a,a.__data__,s,f)&&c.push(a);return new pn(i,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,i=e.length,r=n.length,a=Math.min(i,r),f=new Array(i),o=0;o<a;++o)for(var c,s=e[o],u=n[o],h=s.length,l=f[o]=new Array(h),d=0;d<h;++d)(c=s[d]||u[d])&&(l[d]=c);for(;o<i;++o)f[o]=e[o];return new pn(f,this._parents,this._name,this._id)},selection:function(){return new dn(this._groups,this._parents)},transition:function(){for(var t=this._name,e=this._id,n=yn(),i=this._groups,r=i.length,a=0;a<r;++a)for(var f,o=i[a],c=o.length,s=0;s<c;++s)if(f=o[s]){var u=sn(f,e);fn(f,t,n,s,o,{time:u.time+u.delay+u.duration,delay:0,duration:u.duration,ease:u.ease})}return new pn(i,this._parents,t,n)},call:vn.call,nodes:vn.nodes,node:vn.node,size:vn.size,empty:vn.empty,each:vn.each,on:function(t,e){var n=this._id;return arguments.length<2?sn(this.node(),n).on.on(t):this.each(function(t,e,n){var i,r,a=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||"start"===t})}(e)?on:cn;return function(){var f=a(this,t),o=f.on;o!==i&&(r=(i=o).copy()).on(e,n),f.on=r}}(n,t,e))},attr:function(t,e){var n=p(t),i="transform"===n?Ae:ln;return this.attrTween(t,"function"==typeof e?(n.local?function(t,e,n){var i,r,a;return function(){var f,o,c=n(this);if(null!=c)return(f=this.getAttributeNS(t.space,t.local))===(o=c+"")?null:f===i&&o===r?a:(r=o,a=e(i=f,c));this.removeAttributeNS(t.space,t.local)}}:function(t,e,n){var i,r,a;return function(){var f,o,c=n(this);if(null!=c)return(f=this.getAttribute(t))===(o=c+"")?null:f===i&&o===r?a:(r=o,a=e(i=f,c));this.removeAttribute(t)}})(n,i,hn(this,"attr."+t,e)):null==e?(n.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(n):(n.local?function(t,e,n){var i,r,a=n+"";return function(){var f=this.getAttributeNS(t.space,t.local);return f===a?null:f===i?r:r=e(i=f,n)}}:function(t,e,n){var i,r,a=n+"";return function(){var f=this.getAttribute(t);return f===a?null:f===i?r:r=e(i=f,n)}})(n,i,e))},attrTween:function(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==e)return this.tween(n,null);if("function"!=typeof e)throw new Error;var i=p(t);return this.tween(n,(i.local?function(t,e){var n,i;function r(){var r=e.apply(this,arguments);return r!==i&&(n=(i=r)&&function(t,e){return function(n){this.setAttributeNS(t.space,t.local,e(n))}}(t,r)),n}return r._value=e,r}:function(t,e){var n,i;function r(){var r=e.apply(this,arguments);return r!==i&&(n=(i=r)&&function(t,e){return function(n){this.setAttribute(t,e(n))}}(t,r)),n}return r._value=e,r})(i,e))},style:function(t,e,n){var i="transform"==(t+="")?Ne:ln;return null==e?this.styleTween(t,function(t,e){var n,i,r;return function(){var a=E(this,t),f=(this.style.removeProperty(t),E(this,t));return a===f?null:a===n&&f===i?r:r=e(n=a,i=f)}}(t,i)).on("end.style."+t,_n(t)):"function"==typeof e?this.styleTween(t,function(t,e,n){var i,r,a;return function(){var f=E(this,t),o=n(this),c=o+"";return null==o&&(this.style.removeProperty(t),c=o=E(this,t)),f===c?null:f===i&&c===r?a:(r=c,a=e(i=f,o))}}(t,i,hn(this,"style."+t,e))).each(function(t,e){var n,i,r,a,f="style."+e,o="end."+f;return function(){var c=cn(this,t),s=c.on,u=null==c.value[f]?a||(a=_n(e)):void 0;s===n&&r===u||(i=(n=s).copy()).on(o,r=u),c.on=i}}(this._id,t)):this.styleTween(t,function(t,e,n){var i,r,a=n+"";return function(){var f=E(this,t);return f===a?null:f===i?r:r=e(i=f,n)}}(t,i,e),n).on("end.style."+t,null)},styleTween:function(t,e,n){var i="style."+(t+="");if(arguments.length<2)return(i=this.tween(i))&&i._value;if(null==e)return this.tween(i,null);if("function"!=typeof e)throw new Error;return this.tween(i,function(t,e,n){var i,r;function a(){var a=e.apply(this,arguments);return a!==r&&(i=(r=a)&&function(t,e,n){return function(i){this.style.setProperty(t,e(i),n)}}(t,a,n)),i}return a._value=e,a}(t,e,null==n?"":n))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var e=t(this);this.textContent=null==e?"":e}}(hn(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}));var t},tween:function(t,e){var n=this._id;if(t+="",arguments.length<2){for(var i,r=sn(this.node(),n).tween,a=0,f=r.length;a<f;++a)if((i=r[a]).name===t)return i.value;return null}return this.each((null==e?function(t,e){var n,i;return function(){var r=cn(this,t),a=r.tween;if(a!==n)for(var f=0,o=(i=n=a).length;f<o;++f)if(i[f].name===e){(i=i.slice()).splice(f,1);break}r.tween=i}}:function(t,e,n){var i,r;if("function"!=typeof n)throw new Error;return function(){var a=cn(this,t),f=a.tween;if(f!==i){r=(i=f).slice();for(var o={name:e,value:n},c=0,s=r.length;c<s;++c)if(r[c].name===e){r[c]=o;break}c===s&&r.push(o)}a.tween=r}})(n,t,e))},delay:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?function(t,e){return function(){on(this,t).delay=+e.apply(this,arguments)}}:function(t,e){return e=+e,function(){on(this,t).delay=e}})(e,t)):sn(this.node(),e).delay},duration:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?function(t,e){return function(){cn(this,t).duration=+e.apply(this,arguments)}}:function(t,e){return e=+e,function(){cn(this,t).duration=e}})(e,t)):sn(this.node(),e).duration},ease:function(t){var e=this._id;return arguments.length?this.each(function(t,e){if("function"!=typeof e)throw new Error;return function(){cn(this,t).ease=e}}(e,t)):sn(this.node(),e).ease},end:function(){var t,e,n=this,i=n._id,r=n.size();return new Promise(function(a,f){var o={value:f},c={value:function(){0==--r&&a()}};n.each(function(){var n=cn(this,i),r=n.on;r!==t&&((e=(t=r).copy())._.cancel.push(o),e._.interrupt.push(o),e._.end.push(c)),n.on=e})})}};(function t(e){function n(t){return Math.pow(t,e)}return e=+e,n.exponent=t,n})(3),function t(e){function n(t){return 1-Math.pow(1-t,e)}return e=+e,n.exponent=t,n}(3),function t(e){function n(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}return e=+e,n.exponent=t,n}(3),Math.PI;(function t(e){function n(t){return t*t*((e+1)*t-e)}return e=+e,n.overshoot=t,n})(1.70158),function t(e){function n(t){return--t*t*((e+1)*t+e)+1}return e=+e,n.overshoot=t,n}(1.70158),function t(e){function n(t){return((t*=2)<1?t*t*((e+1)*t-e):(t-=2)*t*((e+1)*t+e)+2)/2}return e=+e,n.overshoot=t,n}(1.70158);var gn=2*Math.PI,xn=(function t(e,n){var i=Math.asin(1/(e=Math.max(1,e)))*(n/=gn);function r(t){return e*Math.pow(2,10*--t)*Math.sin((i-t)/n)}return r.amplitude=function(e){return t(e,n*gn)},r.period=function(n){return t(e,n)},r}(1,.3),function t(e,n){var i=Math.asin(1/(e=Math.max(1,e)))*(n/=gn);function r(t){return 1-e*Math.pow(2,-10*(t=+t))*Math.sin((t+i)/n)}return r.amplitude=function(e){return t(e,n*gn)},r.period=function(n){return t(e,n)},r}(1,.3),function t(e,n){var i=Math.asin(1/(e=Math.max(1,e)))*(n/=gn);function r(t){return((t=2*t-1)<0?e*Math.pow(2,10*t)*Math.sin((i-t)/n):2-e*Math.pow(2,-10*t)*Math.sin((i+t)/n))/2}return r.amplitude=function(e){return t(e,n*gn)},r.period=function(n){return t(e,n)},r}(1,.3),{time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}});function mn(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))return xn.time=ze(),xn;return n}tt.prototype.interrupt=function(t){return this.each(function(){un(this,t)})},tt.prototype.transition=function(t){var e,n;t instanceof pn?(e=t._id,t=t._name):(e=yn(),(n=xn).time=ze(),t=null==t?null:t+"");for(var i=this._groups,r=i.length,a=0;a<r;++a)for(var f,o=i[a],c=o.length,s=0;s<c;++s)(f=o[s])&&fn(f,t,e,s,o,n||mn(f,e));return new pn(i,this._parents,t,e)};["e","w"].map(wn),["n","s"].map(wn),["n","e","s","w","nw","ne","se","sw"].map(wn);function wn(t){return{type:t}}Math.cos,Math.sin,Math.PI,Math.max;Array.prototype.slice;var Mn=Math.PI,Tn=2*Mn,Nn=Tn-1e-6;function An(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Cn(){return new An}An.prototype=Cn.prototype={constructor:An,moveTo:function(t,e){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,e){this._+="L"+(this._x1=+t)+","+(this._y1=+e)},quadraticCurveTo:function(t,e,n,i){this._+="Q"+ +t+","+ +e+","+(this._x1=+n)+","+(this._y1=+i)},bezierCurveTo:function(t,e,n,i,r,a){this._+="C"+ +t+","+ +e+","+ +n+","+ +i+","+(this._x1=+r)+","+(this._y1=+a)},arcTo:function(t,e,n,i,r){t=+t,e=+e,n=+n,i=+i,r=+r;var a=this._x1,f=this._y1,o=n-t,c=i-e,s=a-t,u=f-e,h=s*s+u*u;if(r<0)throw new Error("negative radius: "+r);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=e);else if(h>1e-6)if(Math.abs(u*o-c*s)>1e-6&&r){var l=n-a,d=i-f,_=o*o+c*c,b=l*l+d*d,p=Math.sqrt(_),y=Math.sqrt(h),v=r*Math.tan((Mn-Math.acos((_+h-b)/(2*p*y)))/2),g=v/y,x=v/p;Math.abs(g-1)>1e-6&&(this._+="L"+(t+g*s)+","+(e+g*u)),this._+="A"+r+","+r+",0,0,"+ +(u*l>s*d)+","+(this._x1=t+x*o)+","+(this._y1=e+x*c)}else this._+="L"+(this._x1=t)+","+(this._y1=e);else;},arc:function(t,e,n,i,r,a){t=+t,e=+e;var f=(n=+n)*Math.cos(i),o=n*Math.sin(i),c=t+f,s=e+o,u=1^a,h=a?i-r:r-i;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+c+","+s:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-s)>1e-6)&&(this._+="L"+c+","+s),n&&(h<0&&(h=h%Tn+Tn),h>Nn?this._+="A"+n+","+n+",0,1,"+u+","+(t-f)+","+(e-o)+"A"+n+","+n+",0,1,"+u+","+(this._x1=c)+","+(this._y1=s):h>1e-6&&(this._+="A"+n+","+n+",0,"+ +(h>=Mn)+","+u+","+(this._x1=t+n*Math.cos(r))+","+(this._y1=e+n*Math.sin(r))))},rect:function(t,e,n,i){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)+"h"+ +n+"v"+ +i+"h"+-n+"Z"},toString:function(){return this._}};var kn=Cn;function Sn(){}function En(t,e){var n=new Sn;if(t instanceof Sn)t.each(function(t,e){n.set(e,t)});else if(Array.isArray(t)){var i,r=-1,a=t.length;if(null==e)for(;++r<a;)n.set(r,t[r]);else for(;++r<a;)n.set(e(i=t[r],r,t),i)}else if(t)for(var f in t)n.set(f,t[f]);return n}Sn.prototype=En.prototype={constructor:Sn,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,e){return this["$"+t]=e,this},remove:function(t){var e="$"+t;return e in this&&delete this[e]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var e in this)"$"===e[0]&&t.push(e.slice(1));return t},values:function(){var t=[];for(var e in this)"$"===e[0]&&t.push(this[e]);return t},entries:function(){var t=[];for(var e in this)"$"===e[0]&&t.push({key:e.slice(1),value:this[e]});return t},size:function(){var t=0;for(var e in this)"$"===e[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var e in this)"$"===e[0]&&t(this[e],e.slice(1),this)}};var Un=En;function Pn(){}var Ln=Un.prototype;function Dn(t,e){var n=new Pn;if(t instanceof Pn)t.each(function(t){n.add(t)});else if(t){var i=-1,r=t.length;if(null==e)for(;++i<r;)n.add(t[i]);else for(;++i<r;)n.add(e(t[i],i,t))}return n}Pn.prototype=Dn.prototype={constructor:Pn,has:Ln.has,add:function(t){return this["$"+(t+="")]=t,this},remove:Ln.remove,clear:Ln.clear,values:Ln.keys,size:Ln.size,empty:Ln.empty,each:Ln.each};Array.prototype.slice;var Rn={},jn={},Yn=34,Fn=10,On=13;function qn(t){return new Function("d","return {"+t.map(function(t,e){return JSON.stringify(t)+": d["+e+"]"}).join(",")+"}")}function Hn(t){var e=Object.create(null),n=[];return t.forEach(function(t){for(var i in t)i in e||n.push(e[i]=i)}),n}function zn(t,e){var n=t+"",i=n.length;return i<e?new Array(e-i+1).join(0)+n:n}function In(t){var e,n=t.getUTCHours(),i=t.getUTCMinutes(),r=t.getUTCSeconds(),a=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((e=t.getUTCFullYear())<0?"-"+zn(-e,6):e>9999?"+"+zn(e,6):zn(e,4))+"-"+zn(t.getUTCMonth()+1,2)+"-"+zn(t.getUTCDate(),2)+(a?"T"+zn(n,2)+":"+zn(i,2)+":"+zn(r,2)+"."+zn(a,3)+"Z":r?"T"+zn(n,2)+":"+zn(i,2)+":"+zn(r,2)+"Z":i||n?"T"+zn(n,2)+":"+zn(i,2)+"Z":"")}var $n=function(t){var e=new RegExp('["'+t+"\n\r]"),n=t.charCodeAt(0);function i(t,e){var i,r=[],a=t.length,f=0,o=0,c=a<=0,s=!1;function u(){if(c)return jn;if(s)return s=!1,Rn;var e,i,r=f;if(t.charCodeAt(r)===Yn){for(;f++<a&&t.charCodeAt(f)!==Yn||t.charCodeAt(++f)===Yn;);return(e=f)>=a?c=!0:(i=t.charCodeAt(f++))===Fn?s=!0:i===On&&(s=!0,t.charCodeAt(f)===Fn&&++f),t.slice(r+1,e-1).replace(/""/g,'"')}for(;f<a;){if((i=t.charCodeAt(e=f++))===Fn)s=!0;else if(i===On)s=!0,t.charCodeAt(f)===Fn&&++f;else if(i!==n)continue;return t.slice(r,e)}return c=!0,t.slice(r,a)}for(t.charCodeAt(a-1)===Fn&&--a,t.charCodeAt(a-1)===On&&--a;(i=u())!==jn;){for(var h=[];i!==Rn&&i!==jn;)h.push(i),i=u();e&&null==(h=e(h,o++))||r.push(h)}return r}function r(e,n){return e.map(function(e){return n.map(function(t){return f(e[t])}).join(t)})}function a(e){return e.map(f).join(t)}function f(t){return null==t?"":t instanceof Date?In(t):e.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,e){var n,r,a=i(t,function(t,i){if(n)return n(t,i-1);r=t,n=e?function(t,e){var n=qn(t);return function(i,r){return e(n(i),r,t)}}(t,e):qn(t)});return a.columns=r||[],a},parseRows:i,format:function(e,n){return null==n&&(n=Hn(e)),[n.map(f).join(t)].concat(r(e,n)).join("\n")},formatBody:function(t,e){return null==e&&(e=Hn(t)),r(t,e).join("\n")},formatRows:function(t){return t.map(a).join("\n")}}},Xn=$n(","),Bn=Xn.parse,Zn=(Xn.parseRows,Xn.format,Xn.formatBody,Xn.formatRows,$n("\t")),Vn=Zn.parse;Zn.parseRows,Zn.format,Zn.formatBody,Zn.formatRows;function Wn(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var Qn=function(t,e){return fetch(t,e).then(Wn)};function Jn(t){return function(e,n,i){return 2===arguments.length&&"function"==typeof n&&(i=n,n=void 0),Qn(e,n).then(function(e){return t(e,i)})}}Jn(Bn),Jn(Vn);function Gn(t){return function(e,n){return Qn(e,n).then(function(e){return(new DOMParser).parseFromString(e,t)})}}Gn("application/xml"),Gn("text/html"),Gn("image/svg+xml");function Kn(t,e,n,i){if(isNaN(e)||isNaN(n))return t;var r,a,f,o,c,s,u,h,l,d=t._root,_={data:i},b=t._x0,p=t._y0,y=t._x1,v=t._y1;if(!d)return t._root=_,t;for(;d.length;)if((s=e>=(a=(b+y)/2))?b=a:y=a,(u=n>=(f=(p+v)/2))?p=f:v=f,r=d,!(d=d[h=u<<1|s]))return r[h]=_,t;if(o=+t._x.call(null,d.data),c=+t._y.call(null,d.data),e===o&&n===c)return _.next=d,r?r[h]=_:t._root=_,t;do{r=r?r[h]=new Array(4):t._root=new Array(4),(s=e>=(a=(b+y)/2))?b=a:y=a,(u=n>=(f=(p+v)/2))?p=f:v=f}while((h=u<<1|s)==(l=(c>=f)<<1|o>=a));return r[l]=d,r[h]=_,t}var ti=function(t,e,n,i,r){this.node=t,this.x0=e,this.y0=n,this.x1=i,this.y1=r};function ei(t){return t[0]}function ni(t){return t[1]}function ii(t,e,n){var i=new ri(null==e?ei:e,null==n?ni:n,NaN,NaN,NaN,NaN);return null==t?i:i.addAll(t)}function ri(t,e,n,i,r,a){this._x=t,this._y=e,this._x0=n,this._y0=i,this._x1=r,this._y1=a,this._root=void 0}function ai(t){for(var e={data:t.data},n=e;t=t.next;)n=n.next={data:t.data};return e}var fi=ii.prototype=ri.prototype;fi.copy=function(){var t,e,n=new ri(this._x,this._y,this._x0,this._y0,this._x1,this._y1),i=this._root;if(!i)return n;if(!i.length)return n._root=ai(i),n;for(t=[{source:i,target:n._root=new Array(4)}];i=t.pop();)for(var r=0;r<4;++r)(e=i.source[r])&&(e.length?t.push({source:e,target:i.target[r]=new Array(4)}):i.target[r]=ai(e));return n},fi.add=function(t){var e=+this._x.call(null,t),n=+this._y.call(null,t);return Kn(this.cover(e,n),e,n,t)},fi.addAll=function(t){var e,n,i,r,a=t.length,f=new Array(a),o=new Array(a),c=1/0,s=1/0,u=-1/0,h=-1/0;for(n=0;n<a;++n)isNaN(i=+this._x.call(null,e=t[n]))||isNaN(r=+this._y.call(null,e))||(f[n]=i,o[n]=r,i<c&&(c=i),i>u&&(u=i),r<s&&(s=r),r>h&&(h=r));if(c>u||s>h)return this;for(this.cover(c,s).cover(u,h),n=0;n<a;++n)Kn(this,f[n],o[n],t[n]);return this},fi.cover=function(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,i=this._y0,r=this._x1,a=this._y1;if(isNaN(n))r=(n=Math.floor(t))+1,a=(i=Math.floor(e))+1;else{for(var f,o,c=r-n,s=this._root;n>t||t>=r||i>e||e>=a;)switch(o=(e<i)<<1|t<n,(f=new Array(4))[o]=s,s=f,c*=2,o){case 0:r=n+c,a=i+c;break;case 1:n=r-c,a=i+c;break;case 2:r=n+c,i=a-c;break;case 3:n=r-c,i=a-c}this._root&&this._root.length&&(this._root=s)}return this._x0=n,this._y0=i,this._x1=r,this._y1=a,this},fi.data=function(){var t=[];return this.visit(function(e){if(!e.length)do{t.push(e.data)}while(e=e.next)}),t},fi.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},fi.find=function(t,e,n){var i,r,a,f,o,c,s,u=this._x0,h=this._y0,l=this._x1,d=this._y1,_=[],b=this._root;for(b&&_.push(new ti(b,u,h,l,d)),null==n?n=1/0:(u=t-n,h=e-n,l=t+n,d=e+n,n*=n);c=_.pop();)if(!(!(b=c.node)||(r=c.x0)>l||(a=c.y0)>d||(f=c.x1)<u||(o=c.y1)<h))if(b.length){var p=(r+f)/2,y=(a+o)/2;_.push(new ti(b[3],p,y,f,o),new ti(b[2],r,y,p,o),new ti(b[1],p,a,f,y),new ti(b[0],r,a,p,y)),(s=(e>=y)<<1|t>=p)&&(c=_[_.length-1],_[_.length-1]=_[_.length-1-s],_[_.length-1-s]=c)}else{var v=t-+this._x.call(null,b.data),g=e-+this._y.call(null,b.data),x=v*v+g*g;if(x<n){var m=Math.sqrt(n=x);u=t-m,h=e-m,l=t+m,d=e+m,i=b.data}}return i},fi.remove=function(t){if(isNaN(a=+this._x.call(null,t))||isNaN(f=+this._y.call(null,t)))return this;var e,n,i,r,a,f,o,c,s,u,h,l,d=this._root,_=this._x0,b=this._y0,p=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((s=a>=(o=(_+p)/2))?_=o:p=o,(u=f>=(c=(b+y)/2))?b=c:y=c,e=d,!(d=d[h=u<<1|s]))return this;if(!d.length)break;(e[h+1&3]||e[h+2&3]||e[h+3&3])&&(n=e,l=h)}for(;d.data!==t;)if(i=d,!(d=d.next))return this;return(r=d.next)&&delete d.next,i?(r?i.next=r:delete i.next,this):e?(r?e[h]=r:delete e[h],(d=e[0]||e[1]||e[2]||e[3])&&d===(e[3]||e[2]||e[1]||e[0])&&!d.length&&(n?n[l]=d:this._root=d),this):(this._root=r,this)},fi.removeAll=function(t){for(var e=0,n=t.length;e<n;++e)this.remove(t[e]);return this},fi.root=function(){return this._root},fi.size=function(){var t=0;return this.visit(function(e){if(!e.length)do{++t}while(e=e.next)}),t},fi.visit=function(t){var e,n,i,r,a,f,o=[],c=this._root;for(c&&o.push(new ti(c,this._x0,this._y0,this._x1,this._y1));e=o.pop();)if(!t(c=e.node,i=e.x0,r=e.y0,a=e.x1,f=e.y1)&&c.length){var s=(i+a)/2,u=(r+f)/2;(n=c[3])&&o.push(new ti(n,s,u,a,f)),(n=c[2])&&o.push(new ti(n,i,u,s,f)),(n=c[1])&&o.push(new ti(n,s,r,a,u)),(n=c[0])&&o.push(new ti(n,i,r,s,u))}return this},fi.visitAfter=function(t){var e,n=[],i=[];for(this._root&&n.push(new ti(this._root,this._x0,this._y0,this._x1,this._y1));e=n.pop();){var r=e.node;if(r.length){var a,f=e.x0,o=e.y0,c=e.x1,s=e.y1,u=(f+c)/2,h=(o+s)/2;(a=r[0])&&n.push(new ti(a,f,o,u,h)),(a=r[1])&&n.push(new ti(a,u,o,c,h)),(a=r[2])&&n.push(new ti(a,f,h,u,s)),(a=r[3])&&n.push(new ti(a,u,h,c,s))}i.push(e)}for(;e=i.pop();)t(e.node,e.x0,e.y0,e.x1,e.y1);return this},fi.x=function(t){return arguments.length?(this._x=t,this):this._x},fi.y=function(t){return arguments.length?(this._y=t,this):this._y};Math.PI,Math.sqrt(5);var oi=function(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,i=t.slice(0,n);return[i.length>1?i[0]+i.slice(2):i,+t.slice(n+1)]},ci=function(t){return(t=oi(Math.abs(t)))?t[1]:NaN},si=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ui(t){return new hi(t)}function hi(t){if(!(e=si.exec(t)))throw new Error("invalid format: "+t);var e;this.fill=e[1]||" ",this.align=e[2]||">",this.sign=e[3]||"-",this.symbol=e[4]||"",this.zero=!!e[5],this.width=e[6]&&+e[6],this.comma=!!e[7],this.precision=e[8]&&+e[8].slice(1),this.trim=!!e[9],this.type=e[10]||""}ui.prototype=hi.prototype,hi.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var li,di,_i=function(t){t:for(var e,n=t.length,i=1,r=-1;i<n;++i)switch(t[i]){case".":r=e=i;break;case"0":0===r&&(r=i),e=i;break;default:if(r>0){if(!+t[i])break t;r=0}}return r>0?t.slice(0,r)+t.slice(e+1):t},bi=function(t,e){var n=oi(t,e);if(!n)return t+"";var i=n[0],r=n[1];return r<0?"0."+new Array(-r).join("0")+i:i.length>r+1?i.slice(0,r+1)+"."+i.slice(r+1):i+new Array(r-i.length+2).join("0")},pi={"%":function(t,e){return(100*t).toFixed(e)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,e){return t.toExponential(e)},f:function(t,e){return t.toFixed(e)},g:function(t,e){return t.toPrecision(e)},o:function(t){return Math.round(t).toString(8)},p:function(t,e){return bi(100*t,e)},r:bi,s:function(t,e){var n=oi(t,e);if(!n)return t+"";var i=n[0],r=n[1],a=r-(li=3*Math.max(-8,Math.min(8,Math.floor(r/3))))+1,f=i.length;return a===f?i:a>f?i+new Array(a-f+1).join("0"):a>0?i.slice(0,a)+"."+i.slice(a):"0."+new Array(1-a).join("0")+oi(t,Math.max(0,e+a-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},yi=function(t){return t},vi=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];di=function(t){var e,n,i=t.grouping&&t.thousands?(e=t.grouping,n=t.thousands,function(t,i){for(var r=t.length,a=[],f=0,o=e[0],c=0;r>0&&o>0&&(c+o+1>i&&(o=Math.max(1,i-c)),a.push(t.substring(r-=o,r+o)),!((c+=o+1)>i));)o=e[f=(f+1)%e.length];return a.reverse().join(n)}):yi,r=t.currency,a=t.decimal,f=t.numerals?function(t){return function(e){return e.replace(/[0-9]/g,function(e){return t[+e]})}}(t.numerals):yi,o=t.percent||"%";function c(t){var e=(t=ui(t)).fill,n=t.align,c=t.sign,s=t.symbol,u=t.zero,h=t.width,l=t.comma,d=t.precision,_=t.trim,b=t.type;"n"===b?(l=!0,b="g"):pi[b]||(null==d&&(d=12),_=!0,b="g"),(u||"0"===e&&"="===n)&&(u=!0,e="0",n="=");var p="$"===s?r[0]:"#"===s&&/[boxX]/.test(b)?"0"+b.toLowerCase():"",y="$"===s?r[1]:/[%p]/.test(b)?o:"",v=pi[b],g=/[defgprs%]/.test(b);function x(t){var r,o,s,x=p,m=y;if("c"===b)m=v(t)+m,t="";else{var w=(t=+t)<0;if(t=v(Math.abs(t),d),_&&(t=_i(t)),w&&0==+t&&(w=!1),x=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+x,m=("s"===b?vi[8+li/3]:"")+m+(w&&"("===c?")":""),g)for(r=-1,o=t.length;++r<o;)if(48>(s=t.charCodeAt(r))||s>57){m=(46===s?a+t.slice(r+1):t.slice(r))+m,t=t.slice(0,r);break}}l&&!u&&(t=i(t,1/0));var M=x.length+t.length+m.length,T=M<h?new Array(h-M+1).join(e):"";switch(l&&u&&(t=i(T+t,T.length?h-m.length:1/0),T=""),n){case"<":t=x+t+m+T;break;case"=":t=x+T+t+m;break;case"^":t=T.slice(0,M=T.length>>1)+x+t+m+T.slice(M);break;default:t=T+x+t+m}return f(t)}return d=null==d?6:/[gprs]/.test(b)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),x.toString=function(){return t+""},x}return{format:c,formatPrefix:function(t,e){var n=c(((t=ui(t)).type="f",t)),i=3*Math.max(-8,Math.min(8,Math.floor(ci(e)/3))),r=Math.pow(10,-i),a=vi[8+i/3];return function(t){return n(r*t)+a}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),di.format,di.formatPrefix;var gi=function(){return new xi};function xi(){this.reset()}xi.prototype={constructor:xi,reset:function(){this.s=this.t=0},add:function(t){wi(mi,t,this.t),wi(this,mi.s,this.s),this.s?this.t+=mi.t:this.s=mi.t},valueOf:function(){return this.s}};var mi=new xi;function wi(t,e,n){var i=t.s=e+n,r=i-e,a=i-r;t.t=e-a+(n-r)}var Mi=1e-6,Ti=Math.PI,Ni=Ti/2,Ai=Ti/4,Ci=2*Ti,ki=Ti/180,Si=Math.abs,Ei=Math.atan,Ui=Math.atan2,Pi=Math.cos,Li=(Math.ceil,Math.exp),Di=(Math.floor,Math.log),Ri=(Math.pow,Math.sin),ji=(Math.sign,Math.sqrt),Yi=Math.tan;function Fi(t){return t>1?0:t<-1?Ti:Math.acos(t)}function Oi(t){return t>1?Ni:t<-1?-Ni:Math.asin(t)}function qi(){}gi(),gi();function Hi(t){var e=t[0],n=t[1],i=Pi(n);return[i*Pi(e),i*Ri(e),Ri(n)]}function zi(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function Ii(t){var e=ji(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}gi();function $i(t,e){return[Si(t)>Ti?t+Math.round(-t/Ci)*Ci:t,e]}$i.invert=$i;var Xi=function(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:qi,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}},Bi=function(t,e){return Si(t[0]-e[0])<Mi&&Si(t[1]-e[1])<Mi};function Zi(t,e,n,i){this.x=t,this.z=e,this.o=n,this.e=i,this.v=!1,this.n=this.p=null}var Vi=function(t,e,n,i,r){var a,f,o=[],c=[];if(t.forEach(function(t){if(!((e=t.length-1)<=0)){var e,n,i=t[0],f=t[e];if(Bi(i,f)){for(r.lineStart(),a=0;a<e;++a)r.point((i=t[a])[0],i[1]);r.lineEnd()}else o.push(n=new Zi(i,t,null,!0)),c.push(n.o=new Zi(i,null,n,!1)),o.push(n=new Zi(f,t,null,!1)),c.push(n.o=new Zi(f,null,n,!0))}}),o.length){for(c.sort(e),Wi(o),Wi(c),a=0,f=c.length;a<f;++a)c[a].e=n=!n;for(var s,u,h=o[0];;){for(var l=h,d=!0;l.v;)if((l=l.n)===h)return;s=l.z,r.lineStart();do{if(l.v=l.o.v=!0,l.e){if(d)for(a=0,f=s.length;a<f;++a)r.point((u=s[a])[0],u[1]);else i(l.x,l.n.x,1,r);l=l.n}else{if(d)for(s=l.p.z,a=s.length-1;a>=0;--a)r.point((u=s[a])[0],u[1]);else i(l.x,l.p.x,-1,r);l=l.p}s=(l=l.o).z,d=!d}while(!l.v);r.lineEnd()}}};function Wi(t){if(e=t.length){for(var e,n,i=0,r=t[0];++i<e;)r.n=n=t[i],n.p=r,r=n;r.n=n=t[0],n.p=r}}var Qi=gi(),Ji=function(t,e){var n=e[0],i=e[1],r=Ri(i),a=[Ri(n),-Pi(n),0],f=0,o=0;Qi.reset(),1===r?i=Ni+Mi:-1===r&&(i=-Ni-Mi);for(var c=0,s=t.length;c<s;++c)if(h=(u=t[c]).length)for(var u,h,l=u[h-1],d=l[0],_=l[1]/2+Ai,b=Ri(_),p=Pi(_),y=0;y<h;++y,d=g,b=m,p=w,l=v){var v=u[y],g=v[0],x=v[1]/2+Ai,m=Ri(x),w=Pi(x),M=g-d,T=M>=0?1:-1,N=T*M,A=N>Ti,C=b*m;if(Qi.add(Ui(C*T*Ri(N),p*w+C*Pi(N))),f+=A?M+T*Ci:M,A^d>=n^g>=n){var k=zi(Hi(l),Hi(v));Ii(k);var S=zi(a,k);Ii(S);var E=(A^M>=0?-1:1)*Oi(S[2]);(i>E||i===E&&(k[0]||k[1]))&&(o+=A^M>=0?1:-1)}}return(f<-Mi||f<Mi&&Qi<-Mi)^1&o},Gi=function(t,e,n,i){return function(r){var a,f,c,s=e(r),u=Xi(),h=e(u),l=!1,d={point:_,lineStart:p,lineEnd:y,polygonStart:function(){d.point=v,d.lineStart=g,d.lineEnd=x,f=[],a=[]},polygonEnd:function(){d.point=_,d.lineStart=p,d.lineEnd=y,f=o(f);var t=Ji(a,i);f.length?(l||(r.polygonStart(),l=!0),Vi(f,tr,t,n,r)):t&&(l||(r.polygonStart(),l=!0),r.lineStart(),n(null,null,1,r),r.lineEnd()),l&&(r.polygonEnd(),l=!1),f=a=null},sphere:function(){r.polygonStart(),r.lineStart(),n(null,null,1,r),r.lineEnd(),r.polygonEnd()}};function _(e,n){t(e,n)&&r.point(e,n)}function b(t,e){s.point(t,e)}function p(){d.point=b,s.lineStart()}function y(){d.point=_,s.lineEnd()}function v(t,e){c.push([t,e]),h.point(t,e)}function g(){h.lineStart(),c=[]}function x(){v(c[0][0],c[0][1]),h.lineEnd();var t,e,n,i,o=h.clean(),s=u.result(),d=s.length;if(c.pop(),a.push(c),c=null,d)if(1&o){if((e=(n=s[0]).length-1)>0){for(l||(r.polygonStart(),l=!0),r.lineStart(),t=0;t<e;++t)r.point((i=n[t])[0],i[1]);r.lineEnd()}}else d>1&&2&o&&s.push(s.pop().concat(s.shift())),f.push(s.filter(Ki))}return d}};function Ki(t){return t.length>1}function tr(t,e){return((t=t.x)[0]<0?t[1]-Ni-Mi:Ni-t[1])-((e=e.x)[0]<0?e[1]-Ni-Mi:Ni-e[1])}Gi(function(){return!0},function(t){var e,n=NaN,i=NaN,r=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(a,f){var o=a>0?Ti:-Ti,c=Si(a-n);Si(c-Ti)<Mi?(t.point(n,i=(i+f)/2>0?Ni:-Ni),t.point(r,i),t.lineEnd(),t.lineStart(),t.point(o,i),t.point(a,i),e=0):r!==o&&c>=Ti&&(Si(n-r)<Mi&&(n-=r*Mi),Si(a-o)<Mi&&(a-=o*Mi),i=function(t,e,n,i){var r,a,f=Ri(t-n);return Si(f)>Mi?Ei((Ri(e)*(a=Pi(i))*Ri(n)-Ri(i)*(r=Pi(e))*Ri(t))/(r*a*f)):(e+i)/2}(n,i,a,f),t.point(r,i),t.lineEnd(),t.lineStart(),t.point(o,i),e=0),t.point(n=a,i=f),r=o},lineEnd:function(){t.lineEnd(),n=i=NaN},clean:function(){return 2-e}}},function(t,e,n,i){var r;if(null==t)r=n*Ni,i.point(-Ti,r),i.point(0,r),i.point(Ti,r),i.point(Ti,0),i.point(Ti,-r),i.point(0,-r),i.point(-Ti,-r),i.point(-Ti,0),i.point(-Ti,r);else if(Si(t[0]-e[0])>Mi){var a=t[0]<e[0]?Ti:-Ti;r=n*a/2,i.point(-a,r),i.point(0,r),i.point(a,r)}else i.point(e[0],e[1])},[-Ti,-Ni]);gi();gi(),gi();function er(t){this._context=t}er.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._context.moveTo(t,e),this._point=1;break;case 1:this._context.lineTo(t,e);break;default:this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,Ci)}},result:qi};gi();function nr(){this._string=[]}function ir(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}nr.prototype={_radius:4.5,_circle:ir(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._string.push("M",t,",",e),this._point=1;break;case 1:this._string.push("L",t,",",e);break;default:null==this._circle&&(this._circle=ir(this._radius)),this._string.push("M",t,",",e,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};function rr(t){return function(e){var n=new ar;for(var i in t)n[i]=t[i];return n.stream=e,n}}function ar(){}ar.prototype={constructor:ar,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};Pi(30*ki);rr({point:function(t,e){this.stream.point(t*ki,e*ki)}});function fr(t){return function(e,n){var i=Pi(e),r=Pi(n),a=t(i*r);return[a*r*Ri(e),a*Ri(n)]}}function or(t){return function(e,n){var i=ji(e*e+n*n),r=t(i),a=Ri(r),f=Pi(r);return[Ui(e*a,i*f),Oi(i&&n*a/i)]}}var cr=fr(function(t){return ji(2/(1+t))});cr.invert=or(function(t){return 2*Oi(t/2)});var sr=fr(function(t){return(t=Fi(t))&&t/Ri(t)});sr.invert=or(function(t){return t});function ur(t,e){return[t,Di(Yi((Ni+e)/2))]}ur.invert=function(t,e){return[t,2*Ei(Li(e))-Ni]};function hr(t,e){return[t,e]}hr.invert=hr;var lr=1.340264,dr=-.081106,_r=893e-6,br=.003796,pr=ji(3)/2;function yr(t,e){var n=Oi(pr*Ri(e)),i=n*n,r=i*i*i;return[t*Pi(n)/(pr*(lr+3*dr*i+r*(7*_r+9*br*i))),n*(lr+dr*i+r*(_r+br*i))]}yr.invert=function(t,e){for(var n,i=e,r=i*i,a=r*r*r,f=0;f<12&&(a=(r=(i-=n=(i*(lr+dr*r+a*(_r+br*r))-e)/(lr+3*dr*r+a*(7*_r+9*br*r)))*i)*r*r,!(Si(n)<1e-12));++f);return[pr*t*(lr+3*dr*r+a*(7*_r+9*br*r))/Pi(i),Oi(Ri(i)/pr)]};function vr(t,e){var n=Pi(e),i=Pi(t)*n;return[n*Ri(t)/i,Ri(e)/i]}vr.invert=or(Ei);function gr(t,e){var n=e*e,i=n*n;return[t*(.8707-.131979*n+i*(i*(.003971*n-.001529*i)-.013791)),e*(1.007226+n*(.015085+i*(.028874*n-.044475-.005916*i)))]}gr.invert=function(t,e){var n,i=e,r=25;do{var a=i*i,f=a*a;i-=n=(i*(1.007226+a*(.015085+f*(.028874*a-.044475-.005916*f)))-e)/(1.007226+a*(.045255+f*(.259866*a-.311325-.005916*11*f)))}while(Si(n)>Mi&&--r>0);return[t/(.8707+(a=i*i)*(a*(a*a*a*(.003971-.001529*a)-.013791)-.131979)),i]};function xr(t,e){return[Pi(e)*Ri(t),Ri(e)]}xr.invert=or(Oi);function mr(t,e){var n=Pi(e),i=1+Pi(t)*n;return[n*Ri(t)/i,Ri(e)/i]}mr.invert=or(function(t){return 2*Ei(t)});function wr(t,e){return[Di(Yi((Ni+e)/2)),-t]}wr.invert=function(t,e){return[-e,2*Ei(Li(t))-Ni]};function Mr(t){var e=0,n=t.children,i=n&&n.length;if(i)for(;--i>=0;)e+=n[i].value;else e=1;t.value=e}function Tr(t,e){var n,i,r,a,f,o=new kr(t),c=+t.value&&(o.value=t.value),s=[o];for(null==e&&(e=Nr);n=s.pop();)if(c&&(n.value=+n.data.value),(r=e(n.data))&&(f=r.length))for(n.children=new Array(f),a=f-1;a>=0;--a)s.push(i=n.children[a]=new kr(r[a])),i.parent=n,i.depth=n.depth+1;return o.eachBefore(Cr)}function Nr(t){return t.children}function Ar(t){t.data=t.data.data}function Cr(t){var e=0;do{t.height=e}while((t=t.parent)&&t.height<++e)}function kr(t){this.data=t,this.depth=this.height=0,this.parent=null}kr.prototype=Tr.prototype={constructor:kr,count:function(){return this.eachAfter(Mr)},each:function(t){var e,n,i,r,a=this,f=[a];do{for(e=f.reverse(),f=[];a=e.pop();)if(t(a),n=a.children)for(i=0,r=n.length;i<r;++i)f.push(n[i])}while(f.length);return this},eachAfter:function(t){for(var e,n,i,r=this,a=[r],f=[];r=a.pop();)if(f.push(r),e=r.children)for(n=0,i=e.length;n<i;++n)a.push(e[n]);for(;r=f.pop();)t(r);return this},eachBefore:function(t){for(var e,n,i=this,r=[i];i=r.pop();)if(t(i),e=i.children)for(n=e.length-1;n>=0;--n)r.push(e[n]);return this},sum:function(t){return this.eachAfter(function(e){for(var n=+t(e.data)||0,i=e.children,r=i&&i.length;--r>=0;)n+=i[r].value;e.value=n})},sort:function(t){return this.eachBefore(function(e){e.children&&e.children.sort(t)})},path:function(t){for(var e=this,n=function(t,e){if(t===e)return t;var n=t.ancestors(),i=e.ancestors(),r=null;for(t=n.pop(),e=i.pop();t===e;)r=t,t=n.pop(),e=i.pop();return r}(e,t),i=[e];e!==n;)e=e.parent,i.push(e);for(var r=i.length;t!==n;)i.splice(r,0,t),t=t.parent;return i},ancestors:function(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e},descendants:function(){var t=[];return this.each(function(e){t.push(e)}),t},leaves:function(){var t=[];return this.eachBefore(function(e){e.children||t.push(e)}),t},links:function(){var t=this,e=[];return t.each(function(n){n!==t&&e.push({source:n.parent,target:n})}),e},copy:function(){return Tr(this).eachBefore(Ar)}};Array.prototype.slice;var Sr=function(t,e,n,i,r){for(var a,f=t.children,o=-1,c=f.length,s=t.value&&(i-e)/t.value;++o<c;)(a=f[o]).y0=n,a.y1=r,a.x0=e,a.x1=e+=a.value*s};function Er(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}Er.prototype=Object.create(kr.prototype);var Ur=function(t,e,n,i,r){for(var a,f=t.children,o=-1,c=f.length,s=t.value&&(r-n)/t.value;++o<c;)(a=f[o]).x0=e,a.x1=i,a.y0=n,a.y1=n+=a.value*s},Pr=(1+Math.sqrt(5))/2;function Lr(t,e,n,i,r,a){for(var f,o,c,s,u,h,l,d,_,b,p,y=[],v=e.children,g=0,x=0,m=v.length,w=e.value;g<m;){c=r-n,s=a-i;do{u=v[x++].value}while(!u&&x<m);for(h=l=u,p=u*u*(b=Math.max(s/c,c/s)/(w*t)),_=Math.max(l/p,p/h);x<m;++x){if(u+=o=v[x].value,o<h&&(h=o),o>l&&(l=o),p=u*u*b,(d=Math.max(l/p,p/h))>_){u-=o;break}_=d}y.push(f={value:u,dice:c<s,children:v.slice(g,x)}),f.dice?Sr(f,n,i,r,w?i+=s*u/w:a):Ur(f,n,i,w?n+=c*u/w:r,a),w-=u,g=x}return y}(function t(e){function n(t,n,i,r,a){Lr(e,t,n,i,r,a)}return n.ratio=function(e){return t((e=+e)>1?e:1)},n})(Pr),function t(e){function n(t,n,i,r,a){if((f=t._squarify)&&f.ratio===e)for(var f,o,c,s,u,h=-1,l=f.length,d=t.value;++h<l;){for(c=(o=f[h]).children,s=o.value=0,u=c.length;s<u;++s)o.value+=c[s].value;o.dice?Sr(o,n,i,r,i+=(a-i)*o.value/d):Ur(o,n,i,n+=(r-n)*o.value/d,a),d-=o.value}else t._squarify=f=Lr(e,t,n,i,r,a),f.ratio=e}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(Pr);var Dr=function(){return Math.random()},Rr=(function t(e){function n(t,n){return t=null==t?0:+t,n=null==n?1:+n,1===arguments.length?(n=t,t=0):n-=t,function(){return e()*n+t}}return n.source=t,n}(Dr),function t(e){function n(t,n){var i,r;return t=null==t?0:+t,n=null==n?1:+n,function(){var a;if(null!=i)a=i,i=null;else do{i=2*e()-1,a=2*e()-1,r=i*i+a*a}while(!r||r>1);return t+n*a*Math.sqrt(-2*Math.log(r)/r)}}return n.source=t,n}(Dr)),jr=(function t(e){function n(){var t=Rr.source(e).apply(this,arguments);return function(){return Math.exp(t())}}return n.source=t,n}(Dr),function t(e){function n(t){return function(){for(var n=0,i=0;i<t;++i)n+=e();return n}}return n.source=t,n}(Dr));(function t(e){function n(t){var n=jr.source(e)(t);return function(){return n()/t}}return n.source=t,n})(Dr),function t(e){function n(t){return function(){return-Math.log(1-e())/t}}return n.source=t,n}(Dr);var Yr=Array.prototype;Yr.map,Yr.slice;var Fr=new Date,Or=new Date;function qr(t,e,n,i){function r(e){return t(e=new Date(+e)),e}return r.floor=r,r.ceil=function(n){return t(n=new Date(n-1)),e(n,1),t(n),n},r.round=function(t){var e=r(t),n=r.ceil(t);return t-e<n-t?e:n},r.offset=function(t,n){return e(t=new Date(+t),null==n?1:Math.floor(n)),t},r.range=function(n,i,a){var f,o=[];if(n=r.ceil(n),a=null==a?1:Math.floor(a),!(n<i&&a>0))return o;do{o.push(f=new Date(+n)),e(n,a),t(n)}while(f<n&&n<i);return o},r.filter=function(n){return qr(function(e){if(e>=e)for(;t(e),!n(e);)e.setTime(e-1)},function(t,i){if(t>=t)if(i<0)for(;++i<=0;)for(;e(t,-1),!n(t););else for(;--i>=0;)for(;e(t,1),!n(t););})},n&&(r.count=function(e,i){return Fr.setTime(+e),Or.setTime(+i),t(Fr),t(Or),Math.floor(n(Fr,Or))},r.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?r.filter(i?function(e){return i(e)%t==0}:function(e){return r.count(0,e)%t==0}):r:null}),r}var Hr=qr(function(){},function(t,e){t.setTime(+t+e)},function(t,e){return e-t});Hr.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?qr(function(e){e.setTime(Math.floor(e/t)*t)},function(e,n){e.setTime(+e+n*t)},function(e,n){return(n-e)/t}):Hr:null};Hr.range;var zr=6e4,Ir=6048e5,$r=qr(function(t){t.setTime(t-t.getMilliseconds())},function(t,e){t.setTime(+t+1e3*e)},function(t,e){return(e-t)/1e3},function(t){return t.getUTCSeconds()}),Xr=($r.range,qr(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())},function(t,e){t.setTime(+t+e*zr)},function(t,e){return(e-t)/zr},function(t){return t.getMinutes()})),Br=(Xr.range,qr(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-t.getMinutes()*zr)},function(t,e){t.setTime(+t+36e5*e)},function(t,e){return(e-t)/36e5},function(t){return t.getHours()})),Zr=(Br.range,qr(function(t){t.setHours(0,0,0,0)},function(t,e){t.setDate(t.getDate()+e)},function(t,e){return(e-t-(e.getTimezoneOffset()-t.getTimezoneOffset())*zr)/864e5},function(t){return t.getDate()-1})),Vr=Zr;Zr.range;function Wr(t){return qr(function(e){e.setDate(e.getDate()-(e.getDay()+7-t)%7),e.setHours(0,0,0,0)},function(t,e){t.setDate(t.getDate()+7*e)},function(t,e){return(e-t-(e.getTimezoneOffset()-t.getTimezoneOffset())*zr)/Ir})}var Qr=Wr(0),Jr=Wr(1),Gr=Wr(2),Kr=Wr(3),ta=Wr(4),ea=Wr(5),na=Wr(6),ia=(Qr.range,Jr.range,Gr.range,Kr.range,ta.range,ea.range,na.range,qr(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,e){t.setMonth(t.getMonth()+e)},function(t,e){return e.getMonth()-t.getMonth()+12*(e.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),ra=(ia.range,qr(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,e){t.setFullYear(t.getFullYear()+e)},function(t,e){return e.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));ra.every=function(t){return isFinite(t=Math.floor(t))&&t>0?qr(function(e){e.setFullYear(Math.floor(e.getFullYear()/t)*t),e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,n){e.setFullYear(e.getFullYear()+n*t)}):null};var aa=ra,fa=(ra.range,qr(function(t){t.setUTCSeconds(0,0)},function(t,e){t.setTime(+t+e*zr)},function(t,e){return(e-t)/zr},function(t){return t.getUTCMinutes()})),oa=(fa.range,qr(function(t){t.setUTCMinutes(0,0,0)},function(t,e){t.setTime(+t+36e5*e)},function(t,e){return(e-t)/36e5},function(t){return t.getUTCHours()})),ca=(oa.range,qr(function(t){t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCDate(t.getUTCDate()+e)},function(t,e){return(e-t)/864e5},function(t){return t.getUTCDate()-1})),sa=ca;ca.range;function ua(t){return qr(function(e){e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+7-t)%7),e.setUTCHours(0,0,0,0)},function(t,e){t.setUTCDate(t.getUTCDate()+7*e)},function(t,e){return(e-t)/Ir})}var ha=ua(0),la=ua(1),da=ua(2),_a=ua(3),ba=ua(4),pa=ua(5),ya=ua(6),va=(ha.range,la.range,da.range,_a.range,ba.range,pa.range,ya.range,qr(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCMonth(t.getUTCMonth()+e)},function(t,e){return e.getUTCMonth()-t.getUTCMonth()+12*(e.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),ga=(va.range,qr(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCFullYear(t.getUTCFullYear()+e)},function(t,e){return e.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));ga.every=function(t){return isFinite(t=Math.floor(t))&&t>0?qr(function(e){e.setUTCFullYear(Math.floor(e.getUTCFullYear()/t)*t),e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n*t)}):null};var xa=ga;ga.range;function ma(t){if(0<=t.y&&t.y<100){var e=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return e.setFullYear(t.y),e}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function wa(t){if(0<=t.y&&t.y<100){var e=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return e.setUTCFullYear(t.y),e}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Ma(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var Ta,Na,Aa,Ca={"-":"",_:" ",0:"0"},ka=/^\s*\d+/,Sa=/^%/,Ea=/[\\^$*+?|[\]().{}]/g;function Ua(t,e,n){var i=t<0?"-":"",r=(i?-t:t)+"",a=r.length;return i+(a<n?new Array(n-a+1).join(e)+r:r)}function Pa(t){return t.replace(Ea,"\\$&")}function La(t){return new RegExp("^(?:"+t.map(Pa).join("|")+")","i")}function Da(t){for(var e={},n=-1,i=t.length;++n<i;)e[t[n].toLowerCase()]=n;return e}function Ra(t,e,n){var i=ka.exec(e.slice(n,n+1));return i?(t.w=+i[0],n+i[0].length):-1}function ja(t,e,n){var i=ka.exec(e.slice(n,n+1));return i?(t.u=+i[0],n+i[0].length):-1}function Ya(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.U=+i[0],n+i[0].length):-1}function Fa(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.V=+i[0],n+i[0].length):-1}function Oa(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.W=+i[0],n+i[0].length):-1}function qa(t,e,n){var i=ka.exec(e.slice(n,n+4));return i?(t.y=+i[0],n+i[0].length):-1}function Ha(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.y=+i[0]+(+i[0]>68?1900:2e3),n+i[0].length):-1}function za(t,e,n){var i=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n,n+6));return i?(t.Z=i[1]?0:-(i[2]+(i[3]||"00")),n+i[0].length):-1}function Ia(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.m=i[0]-1,n+i[0].length):-1}function $a(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.d=+i[0],n+i[0].length):-1}function Xa(t,e,n){var i=ka.exec(e.slice(n,n+3));return i?(t.m=0,t.d=+i[0],n+i[0].length):-1}function Ba(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.H=+i[0],n+i[0].length):-1}function Za(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.M=+i[0],n+i[0].length):-1}function Va(t,e,n){var i=ka.exec(e.slice(n,n+2));return i?(t.S=+i[0],n+i[0].length):-1}function Wa(t,e,n){var i=ka.exec(e.slice(n,n+3));return i?(t.L=+i[0],n+i[0].length):-1}function Qa(t,e,n){var i=ka.exec(e.slice(n,n+6));return i?(t.L=Math.floor(i[0]/1e3),n+i[0].length):-1}function Ja(t,e,n){var i=Sa.exec(e.slice(n,n+1));return i?n+i[0].length:-1}function Ga(t,e,n){var i=ka.exec(e.slice(n));return i?(t.Q=+i[0],n+i[0].length):-1}function Ka(t,e,n){var i=ka.exec(e.slice(n));return i?(t.Q=1e3*+i[0],n+i[0].length):-1}function tf(t,e){return Ua(t.getDate(),e,2)}function ef(t,e){return Ua(t.getHours(),e,2)}function nf(t,e){return Ua(t.getHours()%12||12,e,2)}function rf(t,e){return Ua(1+Vr.count(aa(t),t),e,3)}function af(t,e){return Ua(t.getMilliseconds(),e,3)}function ff(t,e){return af(t,e)+"000"}function of(t,e){return Ua(t.getMonth()+1,e,2)}function cf(t,e){return Ua(t.getMinutes(),e,2)}function sf(t,e){return Ua(t.getSeconds(),e,2)}function uf(t){var e=t.getDay();return 0===e?7:e}function hf(t,e){return Ua(Qr.count(aa(t),t),e,2)}function lf(t,e){var n=t.getDay();return t=n>=4||0===n?ta(t):ta.ceil(t),Ua(ta.count(aa(t),t)+(4===aa(t).getDay()),e,2)}function df(t){return t.getDay()}function _f(t,e){return Ua(Jr.count(aa(t),t),e,2)}function bf(t,e){return Ua(t.getFullYear()%100,e,2)}function pf(t,e){return Ua(t.getFullYear()%1e4,e,4)}function yf(t){var e=t.getTimezoneOffset();return(e>0?"-":(e*=-1,"+"))+Ua(e/60|0,"0",2)+Ua(e%60,"0",2)}function vf(t,e){return Ua(t.getUTCDate(),e,2)}function gf(t,e){return Ua(t.getUTCHours(),e,2)}function xf(t,e){return Ua(t.getUTCHours()%12||12,e,2)}function mf(t,e){return Ua(1+sa.count(xa(t),t),e,3)}function wf(t,e){return Ua(t.getUTCMilliseconds(),e,3)}function Mf(t,e){return wf(t,e)+"000"}function Tf(t,e){return Ua(t.getUTCMonth()+1,e,2)}function Nf(t,e){return Ua(t.getUTCMinutes(),e,2)}function Af(t,e){return Ua(t.getUTCSeconds(),e,2)}function Cf(t){var e=t.getUTCDay();return 0===e?7:e}function kf(t,e){return Ua(ha.count(xa(t),t),e,2)}function Sf(t,e){var n=t.getUTCDay();return t=n>=4||0===n?ba(t):ba.ceil(t),Ua(ba.count(xa(t),t)+(4===xa(t).getUTCDay()),e,2)}function Ef(t){return t.getUTCDay()}function Uf(t,e){return Ua(la.count(xa(t),t),e,2)}function Pf(t,e){return Ua(t.getUTCFullYear()%100,e,2)}function Lf(t,e){return Ua(t.getUTCFullYear()%1e4,e,4)}function Df(){return"+0000"}function Rf(){return"%"}function jf(t){return+t}function Yf(t){return Math.floor(+t/1e3)}!function(t){Ta=function(t){var e=t.dateTime,n=t.date,i=t.time,r=t.periods,a=t.days,f=t.shortDays,o=t.months,c=t.shortMonths,s=La(r),u=Da(r),h=La(a),l=Da(a),d=La(f),_=Da(f),b=La(o),p=Da(o),y=La(c),v=Da(c),g={a:function(t){return f[t.getDay()]},A:function(t){return a[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return o[t.getMonth()]},c:null,d:tf,e:tf,f:ff,H:ef,I:nf,j:rf,L:af,m:of,M:cf,p:function(t){return r[+(t.getHours()>=12)]},Q:jf,s:Yf,S:sf,u:uf,U:hf,V:lf,w:df,W:_f,x:null,X:null,y:bf,Y:pf,Z:yf,"%":Rf},x={a:function(t){return f[t.getUTCDay()]},A:function(t){return a[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return o[t.getUTCMonth()]},c:null,d:vf,e:vf,f:Mf,H:gf,I:xf,j:mf,L:wf,m:Tf,M:Nf,p:function(t){return r[+(t.getUTCHours()>=12)]},Q:jf,s:Yf,S:Af,u:Cf,U:kf,V:Sf,w:Ef,W:Uf,x:null,X:null,y:Pf,Y:Lf,Z:Df,"%":Rf},m={a:function(t,e,n){var i=d.exec(e.slice(n));return i?(t.w=_[i[0].toLowerCase()],n+i[0].length):-1},A:function(t,e,n){var i=h.exec(e.slice(n));return i?(t.w=l[i[0].toLowerCase()],n+i[0].length):-1},b:function(t,e,n){var i=y.exec(e.slice(n));return i?(t.m=v[i[0].toLowerCase()],n+i[0].length):-1},B:function(t,e,n){var i=b.exec(e.slice(n));return i?(t.m=p[i[0].toLowerCase()],n+i[0].length):-1},c:function(t,n,i){return T(t,e,n,i)},d:$a,e:$a,f:Qa,H:Ba,I:Ba,j:Xa,L:Wa,m:Ia,M:Za,p:function(t,e,n){var i=s.exec(e.slice(n));return i?(t.p=u[i[0].toLowerCase()],n+i[0].length):-1},Q:Ga,s:Ka,S:Va,u:ja,U:Ya,V:Fa,w:Ra,W:Oa,x:function(t,e,i){return T(t,n,e,i)},X:function(t,e,n){return T(t,i,e,n)},y:Ha,Y:qa,Z:za,"%":Ja};function w(t,e){return function(n){var i,r,a,f=[],o=-1,c=0,s=t.length;for(n instanceof Date||(n=new Date(+n));++o<s;)37===t.charCodeAt(o)&&(f.push(t.slice(c,o)),null!=(r=Ca[i=t.charAt(++o)])?i=t.charAt(++o):r="e"===i?" ":"0",(a=e[i])&&(i=a(n,r)),f.push(i),c=o+1);return f.push(t.slice(c,o)),f.join("")}}function M(t,e){return function(n){var i,r,a=Ma(1900);if(T(a,t,n+="",0)!=n.length)return null;if("Q"in a)return new Date(a.Q);if("p"in a&&(a.H=a.H%12+12*a.p),"V"in a){if(a.V<1||a.V>53)return null;"w"in a||(a.w=1),"Z"in a?(r=(i=wa(Ma(a.y))).getUTCDay(),i=r>4||0===r?la.ceil(i):la(i),i=sa.offset(i,7*(a.V-1)),a.y=i.getUTCFullYear(),a.m=i.getUTCMonth(),a.d=i.getUTCDate()+(a.w+6)%7):(r=(i=e(Ma(a.y))).getDay(),i=r>4||0===r?Jr.ceil(i):Jr(i),i=Vr.offset(i,7*(a.V-1)),a.y=i.getFullYear(),a.m=i.getMonth(),a.d=i.getDate()+(a.w+6)%7)}else("W"in a||"U"in a)&&("w"in a||(a.w="u"in a?a.u%7:"W"in a?1:0),r="Z"in a?wa(Ma(a.y)).getUTCDay():e(Ma(a.y)).getDay(),a.m=0,a.d="W"in a?(a.w+6)%7+7*a.W-(r+5)%7:a.w+7*a.U-(r+6)%7);return"Z"in a?(a.H+=a.Z/100|0,a.M+=a.Z%100,wa(a)):e(a)}}function T(t,e,n,i){for(var r,a,f=0,o=e.length,c=n.length;f<o;){if(i>=c)return-1;if(37===(r=e.charCodeAt(f++))){if(r=e.charAt(f++),!(a=m[r in Ca?e.charAt(f++):r])||(i=a(t,n,i))<0)return-1}else if(r!=n.charCodeAt(i++))return-1}return i}return g.x=w(n,g),g.X=w(i,g),g.c=w(e,g),x.x=w(n,x),x.X=w(i,x),x.c=w(e,x),{format:function(t){var e=w(t+="",g);return e.toString=function(){return t},e},parse:function(t){var e=M(t+="",ma);return e.toString=function(){return t},e},utcFormat:function(t){var e=w(t+="",x);return e.toString=function(){return t},e},utcParse:function(t){var e=M(t,wa);return e.toString=function(){return t},e}}}(t),Ta.format,Ta.parse,Na=Ta.utcFormat,Aa=Ta.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||Na("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||Aa("%Y-%m-%dT%H:%M:%S.%LZ");var Ff=function(t){for(var e=t.length/6|0,n=new Array(e),i=0;i<e;)n[i]="#"+t.slice(6*i,6*++i);return n},Of=Ff("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),qf=(Ff("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Ff("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Ff("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Ff("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Ff("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),Ff("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Ff("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Ff("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),function(t){return le(t[t.length-1])});qf(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Ff)),qf(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Ff)),qf(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Ff)),qf(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Ff)),qf(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Ff)),qf(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Ff)),qf(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Ff)),qf(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Ff)),qf(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Ff)),qf(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Ff)),qf(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Ff)),qf(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Ff)),qf(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Ff)),qf(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Ff)),qf(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Ff)),qf(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Ff)),qf(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Ff)),qf(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Ff)),qf(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Ff)),qf(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Ff)),qf(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Ff)),qf(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Ff)),qf(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Ff)),qf(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Ff)),qf(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Ff)),qf(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Ff)),qf(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Ff)),Ee(ne(300,.5,0),ne(-240,.5,1)),Ee(ne(-100,.75,.35),ne(80,1.5,.8)),Ee(ne(260,.75,.35),ne(80,1.5,.8)),ne(),Tt(),Math.PI,Math.PI;function Hf(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}Hf(Ff("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Hf(Ff("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Hf(Ff("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Hf(Ff("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));var zf=function(t){return function(){return t}},If=Math.abs,$f=Math.atan2,Xf=Math.cos,Bf=Math.max,Zf=Math.min,Vf=Math.sin,Wf=Math.sqrt,Qf=1e-12,Jf=Math.PI,Gf=Jf/2,Kf=2*Jf;function to(t){return t>=1?Gf:t<=-1?-Gf:Math.asin(t)}function eo(t){return t.innerRadius}function no(t){return t.outerRadius}function io(t){return t.startAngle}function ro(t){return t.endAngle}function ao(t){return t&&t.padAngle}function fo(t,e,n,i,r,a,f){var o=t-n,c=e-i,s=(f?a:-a)/Wf(o*o+c*c),u=s*c,h=-s*o,l=t+u,d=e+h,_=n+u,b=i+h,p=(l+_)/2,y=(d+b)/2,v=_-l,g=b-d,x=v*v+g*g,m=r-a,w=l*b-_*d,M=(g<0?-1:1)*Wf(Bf(0,m*m*x-w*w)),T=(w*g-v*M)/x,N=(-w*v-g*M)/x,A=(w*g+v*M)/x,C=(-w*v+g*M)/x,k=T-p,S=N-y,E=A-p,U=C-y;return k*k+S*S>E*E+U*U&&(T=A,N=C),{cx:T,cy:N,x01:-u,y01:-h,x11:T*(r/m-1),y11:N*(r/m-1)}}var oo=function(){var t=eo,e=no,n=zf(0),i=null,r=io,a=ro,f=ao,o=null;function c(){var c,s,u,h=+t.apply(this,arguments),l=+e.apply(this,arguments),d=r.apply(this,arguments)-Gf,_=a.apply(this,arguments)-Gf,b=If(_-d),p=_>d;if(o||(o=c=kn()),l<h&&(s=l,l=h,h=s),l>Qf)if(b>Kf-Qf)o.moveTo(l*Xf(d),l*Vf(d)),o.arc(0,0,l,d,_,!p),h>Qf&&(o.moveTo(h*Xf(_),h*Vf(_)),o.arc(0,0,h,_,d,p));else{var y,v,g=d,x=_,m=d,w=_,M=b,T=b,N=f.apply(this,arguments)/2,A=N>Qf&&(i?+i.apply(this,arguments):Wf(h*h+l*l)),C=Zf(If(l-h)/2,+n.apply(this,arguments)),k=C,S=C;if(A>Qf){var E=to(A/h*Vf(N)),U=to(A/l*Vf(N));(M-=2*E)>Qf?(m+=E*=p?1:-1,w-=E):(M=0,m=w=(d+_)/2),(T-=2*U)>Qf?(g+=U*=p?1:-1,x-=U):(T=0,g=x=(d+_)/2)}var P=l*Xf(g),L=l*Vf(g),D=h*Xf(w),R=h*Vf(w);if(C>Qf){var j,Y=l*Xf(x),F=l*Vf(x),O=h*Xf(m),q=h*Vf(m);if(b<Jf&&(j=function(t,e,n,i,r,a,f,o){var c=n-t,s=i-e,u=f-r,h=o-a,l=h*c-u*s;if(!(l*l<Qf))return[t+(l=(u*(e-a)-h*(t-r))/l)*c,e+l*s]}(P,L,O,q,Y,F,D,R))){var H=P-j[0],z=L-j[1],I=Y-j[0],$=F-j[1],X=1/Vf(((u=(H*I+z*$)/(Wf(H*H+z*z)*Wf(I*I+$*$)))>1?0:u<-1?Jf:Math.acos(u))/2),B=Wf(j[0]*j[0]+j[1]*j[1]);k=Zf(C,(h-B)/(X-1)),S=Zf(C,(l-B)/(X+1))}}T>Qf?S>Qf?(y=fo(O,q,P,L,l,S,p),v=fo(Y,F,D,R,l,S,p),o.moveTo(y.cx+y.x01,y.cy+y.y01),S<C?o.arc(y.cx,y.cy,S,$f(y.y01,y.x01),$f(v.y01,v.x01),!p):(o.arc(y.cx,y.cy,S,$f(y.y01,y.x01),$f(y.y11,y.x11),!p),o.arc(0,0,l,$f(y.cy+y.y11,y.cx+y.x11),$f(v.cy+v.y11,v.cx+v.x11),!p),o.arc(v.cx,v.cy,S,$f(v.y11,v.x11),$f(v.y01,v.x01),!p))):(o.moveTo(P,L),o.arc(0,0,l,g,x,!p)):o.moveTo(P,L),h>Qf&&M>Qf?k>Qf?(y=fo(D,R,Y,F,h,-k,p),v=fo(P,L,O,q,h,-k,p),o.lineTo(y.cx+y.x01,y.cy+y.y01),k<C?o.arc(y.cx,y.cy,k,$f(y.y01,y.x01),$f(v.y01,v.x01),!p):(o.arc(y.cx,y.cy,k,$f(y.y01,y.x01),$f(y.y11,y.x11),!p),o.arc(0,0,h,$f(y.cy+y.y11,y.cx+y.x11),$f(v.cy+v.y11,v.cx+v.x11),p),o.arc(v.cx,v.cy,k,$f(v.y11,v.x11),$f(v.y01,v.x01),!p))):o.arc(0,0,h,w,m,p):o.lineTo(D,R)}else o.moveTo(0,0);if(o.closePath(),c)return o=null,c+""||null}return c.centroid=function(){var n=(+t.apply(this,arguments)+ +e.apply(this,arguments))/2,i=(+r.apply(this,arguments)+ +a.apply(this,arguments))/2-Jf/2;return[Xf(i)*n,Vf(i)*n]},c.innerRadius=function(e){return arguments.length?(t="function"==typeof e?e:zf(+e),c):t},c.outerRadius=function(t){return arguments.length?(e="function"==typeof t?t:zf(+t),c):e},c.cornerRadius=function(t){return arguments.length?(n="function"==typeof t?t:zf(+t),c):n},c.padRadius=function(t){return arguments.length?(i=null==t?null:"function"==typeof t?t:zf(+t),c):i},c.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:zf(+t),c):r},c.endAngle=function(t){return arguments.length?(a="function"==typeof t?t:zf(+t),c):a},c.padAngle=function(t){return arguments.length?(f="function"==typeof t?t:zf(+t),c):f},c.context=function(t){return arguments.length?(o=null==t?null:t,c):o},c};function co(t){this._context=t}co.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e)}}};var so=function(t){return new co(t)};var uo=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN},ho=function(t){return t};_o(so);function lo(t){this._curve=t}function _o(t){function e(e){return new lo(t(e))}return e._curve=t,e}lo.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,e){this._curve.point(e*Math.sin(t),e*-Math.cos(t))}};Array.prototype.slice;Math.sqrt(1/3);var bo=Math.sin(Jf/10)/Math.sin(7*Jf/10),po=(Math.sin(Kf/10),Math.cos(Kf/10),Math.sqrt(3),Math.sqrt(3),Math.sqrt(12),function(){});function yo(t,e,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+e)/6,(t._y0+4*t._y1+n)/6)}function vo(t){this._context=t}vo.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:yo(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:yo(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function go(t){this._context=t}go.prototype={areaStart:po,areaEnd:po,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x2=t,this._y2=e;break;case 1:this._point=2,this._x3=t,this._y3=e;break;case 2:this._point=3,this._x4=t,this._y4=e,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+e)/6);break;default:yo(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function xo(t){this._context=t}xo.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,i=(this._y0+4*this._y1+e)/6;this._line?this._context.lineTo(n,i):this._context.moveTo(n,i);break;case 3:this._point=4;default:yo(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function mo(t,e){this._basis=new vo(t),this._beta=e}mo.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,e=this._y,n=t.length-1;if(n>0)for(var i,r=t[0],a=e[0],f=t[n]-r,o=e[n]-a,c=-1;++c<=n;)i=c/n,this._basis.point(this._beta*t[c]+(1-this._beta)*(r+i*f),this._beta*e[c]+(1-this._beta)*(a+i*o));this._x=this._y=null,this._basis.lineEnd()},point:function(t,e){this._x.push(+t),this._y.push(+e)}};(function t(e){function n(t){return 1===e?new vo(t):new mo(t,e)}return n.beta=function(e){return t(+e)},n})(.85);function wo(t,e,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-e),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function Mo(t,e){this._context=t,this._k=(1-e)/6}Mo.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:wo(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2,this._x1=t,this._y1=e;break;case 2:this._point=3;default:wo(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};(function t(e){function n(t){return new Mo(t,e)}return n.tension=function(e){return t(+e)},n})(0);function To(t,e){this._context=t,this._k=(1-e)/6}To.prototype={areaStart:po,areaEnd:po,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:wo(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};(function t(e){function n(t){return new To(t,e)}return n.tension=function(e){return t(+e)},n})(0);function No(t,e){this._context=t,this._k=(1-e)/6}No.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:wo(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};(function t(e){function n(t){return new No(t,e)}return n.tension=function(e){return t(+e)},n})(0);function Ao(t,e,n){var i=t._x1,r=t._y1,a=t._x2,f=t._y2;if(t._l01_a>Qf){var o=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);i=(i*o-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,r=(r*o-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>Qf){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,u=3*t._l23_a*(t._l23_a+t._l12_a);a=(a*s+t._x1*t._l23_2a-e*t._l12_2a)/u,f=(f*s+t._y1*t._l23_2a-n*t._l12_2a)/u}t._context.bezierCurveTo(i,r,a,f,t._x2,t._y2)}function Co(t,e){this._context=t,this._alpha=e}Co.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,i=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3;default:Ao(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};(function t(e){function n(t){return e?new Co(t,e):new Mo(t,0)}return n.alpha=function(e){return t(+e)},n})(.5);function ko(t,e){this._context=t,this._alpha=e}ko.prototype={areaStart:po,areaEnd:po,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,i=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Ao(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};(function t(e){function n(t){return e?new ko(t,e):new To(t,0)}return n.alpha=function(e){return t(+e)},n})(.5);function So(t,e){this._context=t,this._alpha=e}So.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,i=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Ao(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};(function t(e){function n(t){return e?new So(t,e):new No(t,0)}return n.alpha=function(e){return t(+e)},n})(.5);function Eo(t){this._context=t}Eo.prototype={areaStart:po,areaEnd:po,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,e){t=+t,e=+e,this._point?this._context.lineTo(t,e):(this._point=1,this._context.moveTo(t,e))}};function Uo(t){return t<0?-1:1}function Po(t,e,n){var i=t._x1-t._x0,r=e-t._x1,a=(t._y1-t._y0)/(i||r<0&&-0),f=(n-t._y1)/(r||i<0&&-0),o=(a*r+f*i)/(i+r);return(Uo(a)+Uo(f))*Math.min(Math.abs(a),Math.abs(f),.5*Math.abs(o))||0}function Lo(t,e){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-e)/2:e}function Do(t,e,n){var i=t._x0,r=t._y0,a=t._x1,f=t._y1,o=(a-i)/3;t._context.bezierCurveTo(i+o,r+o*e,a-o,f-o*n,a,f)}function Ro(t){this._context=t}function jo(t){this._context=new Yo(t)}function Yo(t){this._context=t}function Fo(t){this._context=t}function Oo(t){var e,n,i=t.length-1,r=new Array(i),a=new Array(i),f=new Array(i);for(r[0]=0,a[0]=2,f[0]=t[0]+2*t[1],e=1;e<i-1;++e)r[e]=1,a[e]=4,f[e]=4*t[e]+2*t[e+1];for(r[i-1]=2,a[i-1]=7,f[i-1]=8*t[i-1]+t[i],e=1;e<i;++e)n=r[e]/a[e-1],a[e]-=n,f[e]-=n*f[e-1];for(r[i-1]=f[i-1]/a[i-1],e=i-2;e>=0;--e)r[e]=(f[e]-r[e+1])/a[e];for(a[i-1]=(t[i]+r[i-1])/2,e=0;e<i-1;++e)a[e]=2*t[e+1]-r[e+1];return[r,a]}Ro.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Do(this,this._t0,Lo(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){var n=NaN;if(e=+e,(t=+t)!==this._x1||e!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,Do(this,Lo(this,n=Po(this,t,e)),n);break;default:Do(this,this._t0,n=Po(this,t,e))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e,this._t0=n}}},(jo.prototype=Object.create(Ro.prototype)).point=function(t,e){Ro.prototype.point.call(this,e,t)},Yo.prototype={moveTo:function(t,e){this._context.moveTo(e,t)},closePath:function(){this._context.closePath()},lineTo:function(t,e){this._context.lineTo(e,t)},bezierCurveTo:function(t,e,n,i,r,a){this._context.bezierCurveTo(e,t,i,n,a,r)}},Fo.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,e=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],e[0]):this._context.moveTo(t[0],e[0]),2===n)this._context.lineTo(t[1],e[1]);else for(var i=Oo(t),r=Oo(e),a=0,f=1;f<n;++a,++f)this._context.bezierCurveTo(i[0][a],r[0][a],i[1][a],r[1][a],t[f],e[f]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,e){this._x.push(+t),this._y.push(+e)}};function qo(t,e){this._context=t,this._t=e}qo.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,e),this._context.lineTo(t,e);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,e)}}this._x=t,this._y=e}};function Ho(){this._=null}function zo(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Io(t,e){var n=e,i=e.R,r=n.U;r?r.L===n?r.L=i:r.R=i:t._=i,i.U=r,n.U=i,n.R=i.L,n.R&&(n.R.U=n),i.L=n}function $o(t,e){var n=e,i=e.L,r=n.U;r?r.L===n?r.L=i:r.R=i:t._=i,i.U=r,n.U=i,n.L=i.R,n.L&&(n.L.U=n),i.R=n}function Xo(t){for(;t.L;)t=t.L;return t}Ho.prototype={constructor:Ho,insert:function(t,e){var n,i,r;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=Xo(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(i=n.U).L?(r=i.R)&&r.C?(n.C=r.C=!1,i.C=!0,t=i):(t===n.R&&(Io(this,n),n=(t=n).U),n.C=!1,i.C=!0,$o(this,i)):(r=i.L)&&r.C?(n.C=r.C=!1,i.C=!0,t=i):(t===n.L&&($o(this,n),n=(t=n).U),n.C=!1,i.C=!0,Io(this,i)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,i,r=t.U,a=t.L,f=t.R;if(n=a?f?Xo(f):a:f,r?r.L===t?r.L=n:r.R=n:this._=n,a&&f?(i=n.C,n.C=t.C,n.L=a,a.U=n,n!==f?(r=n.U,n.U=t.U,t=n.R,r.L=t,n.R=f,f.U=n):(n.U=r,r=n,t=n.R)):(i=t.C,t=n),t&&(t.U=r),!i)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===r.L){if((e=r.R).C&&(e.C=!1,r.C=!0,Io(this,r),e=r.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,$o(this,e),e=r.R),e.C=r.C,r.C=e.R.C=!1,Io(this,r),t=this._;break}}else if((e=r.L).C&&(e.C=!1,r.C=!0,$o(this,r),e=r.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,Io(this,e),e=r.L),e.C=r.C,r.C=e.L.C=!1,$o(this,r),t=this._;break}e.C=!0,t=r,r=r.U}while(!t.C);t&&(t.C=!1)}}};var Bo=Ho;function Zo(t,e,n,i){var r=[null,null],a=yc.push(r)-1;return r.left=t,r.right=e,n&&Wo(r,t,e,n),i&&Wo(r,e,t,i),bc[t.index].halfedges.push(a),bc[e.index].halfedges.push(a),r}function Vo(t,e,n){var i=[e,n];return i.left=t,i}function Wo(t,e,n,i){t[0]||t[1]?t.left===n?t[1]=i:t[0]=i:(t[0]=i,t.left=e,t.right=n)}function Qo(t,e,n,i,r){var a,f=t[0],o=t[1],c=f[0],s=f[1],u=0,h=1,l=o[0]-c,d=o[1]-s;if(a=e-c,l||!(a>0)){if(a/=l,l<0){if(a<u)return;a<h&&(h=a)}else if(l>0){if(a>h)return;a>u&&(u=a)}if(a=i-c,l||!(a<0)){if(a/=l,l<0){if(a>h)return;a>u&&(u=a)}else if(l>0){if(a<u)return;a<h&&(h=a)}if(a=n-s,d||!(a>0)){if(a/=d,d<0){if(a<u)return;a<h&&(h=a)}else if(d>0){if(a>h)return;a>u&&(u=a)}if(a=r-s,d||!(a<0)){if(a/=d,d<0){if(a>h)return;a>u&&(u=a)}else if(d>0){if(a<u)return;a<h&&(h=a)}return!(u>0||h<1)||(u>0&&(t[0]=[c+u*l,s+u*d]),h<1&&(t[1]=[c+h*l,s+h*d]),!0)}}}}}function Jo(t,e,n,i,r){var a=t[1];if(a)return!0;var f,o,c=t[0],s=t.left,u=t.right,h=s[0],l=s[1],d=u[0],_=u[1],b=(h+d)/2,p=(l+_)/2;if(_===l){if(b<e||b>=i)return;if(h>d){if(c){if(c[1]>=r)return}else c=[b,n];a=[b,r]}else{if(c){if(c[1]<n)return}else c=[b,r];a=[b,n]}}else if(o=p-(f=(h-d)/(_-l))*b,f<-1||f>1)if(h>d){if(c){if(c[1]>=r)return}else c=[(n-o)/f,n];a=[(r-o)/f,r]}else{if(c){if(c[1]<n)return}else c=[(r-o)/f,r];a=[(n-o)/f,n]}else if(l<_){if(c){if(c[0]>=i)return}else c=[e,f*e+o];a=[i,f*i+o]}else{if(c){if(c[0]<e)return}else c=[i,f*i+o];a=[e,f*e+o]}return t[0]=c,t[1]=a,!0}function Go(t,e){var n=t.site,i=e.left,r=e.right;return n===r&&(r=i,i=n),r?Math.atan2(r[1]-i[1],r[0]-i[0]):(n===i?(i=e[1],r=e[0]):(i=e[0],r=e[1]),Math.atan2(i[0]-r[0],r[1]-i[1]))}function Ko(t,e){return e[+(e.left!==t.site)]}function tc(t,e){return e[+(e.left===t.site)]}var ec,nc=[];function ic(){zo(this),this.x=this.y=this.arc=this.site=this.cy=null}function rc(t){var e=t.P,n=t.N;if(e&&n){var i=e.site,r=t.site,a=n.site;if(i!==a){var f=r[0],o=r[1],c=i[0]-f,s=i[1]-o,u=a[0]-f,h=a[1]-o,l=2*(c*h-s*u);if(!(l>=-gc)){var d=c*c+s*s,_=u*u+h*h,b=(h*d-s*_)/l,p=(c*_-u*d)/l,y=nc.pop()||new ic;y.arc=t,y.site=r,y.x=b+f,y.y=(y.cy=p+o)+Math.sqrt(b*b+p*p),t.circle=y;for(var v=null,g=pc._;g;)if(y.y<g.y||y.y===g.y&&y.x<=g.x){if(!g.L){v=g.P;break}g=g.L}else{if(!g.R){v=g;break}g=g.R}pc.insert(v,y),v||(ec=y)}}}}function ac(t){var e=t.circle;e&&(e.P||(ec=e.N),pc.remove(e),nc.push(e),zo(e),t.circle=null)}var fc=[];function oc(){zo(this),this.edge=this.site=this.circle=null}function cc(t){var e=fc.pop()||new oc;return e.site=t,e}function sc(t){ac(t),_c.remove(t),fc.push(t),zo(t)}function uc(t){var e=t.circle,n=e.x,i=e.cy,r=[n,i],a=t.P,f=t.N,o=[t];sc(t);for(var c=a;c.circle&&Math.abs(n-c.circle.x)<vc&&Math.abs(i-c.circle.cy)<vc;)a=c.P,o.unshift(c),sc(c),c=a;o.unshift(c),ac(c);for(var s=f;s.circle&&Math.abs(n-s.circle.x)<vc&&Math.abs(i-s.circle.cy)<vc;)f=s.N,o.push(s),sc(s),s=f;o.push(s),ac(s);var u,h=o.length;for(u=1;u<h;++u)s=o[u],c=o[u-1],Wo(s.edge,c.site,s.site,r);c=o[0],(s=o[h-1]).edge=Zo(c.site,s.site,null,r),rc(c),rc(s)}function hc(t){for(var e,n,i,r,a=t[0],f=t[1],o=_c._;o;)if((i=lc(o,f)-a)>vc)o=o.L;else{if(!((r=a-dc(o,f))>vc)){i>-vc?(e=o.P,n=o):r>-vc?(e=o,n=o.N):e=n=o;break}if(!o.R){e=o;break}o=o.R}!function(t){bc[t.index]={site:t,halfedges:[]}}(t);var c=cc(t);if(_c.insert(e,c),e||n){if(e===n)return ac(e),n=cc(e.site),_c.insert(c,n),c.edge=n.edge=Zo(e.site,c.site),rc(e),void rc(n);if(n){ac(e),ac(n);var s=e.site,u=s[0],h=s[1],l=t[0]-u,d=t[1]-h,_=n.site,b=_[0]-u,p=_[1]-h,y=2*(l*p-d*b),v=l*l+d*d,g=b*b+p*p,x=[(p*v-d*g)/y+u,(l*g-b*v)/y+h];Wo(n.edge,s,_,x),c.edge=Zo(s,t,null,x),n.edge=Zo(t,_,null,x),rc(e),rc(n)}else c.edge=Zo(e.site,c.site)}}function lc(t,e){var n=t.site,i=n[0],r=n[1],a=r-e;if(!a)return i;var f=t.P;if(!f)return-1/0;var o=(n=f.site)[0],c=n[1],s=c-e;if(!s)return o;var u=o-i,h=1/a-1/s,l=u/s;return h?(-l+Math.sqrt(l*l-2*h*(u*u/(-2*s)-c+s/2+r-a/2)))/h+i:(i+o)/2}function dc(t,e){var n=t.N;if(n)return lc(n,e);var i=t.site;return i[1]===e?i[0]:1/0}var _c,bc,pc,yc,vc=1e-6,gc=1e-12;function xc(t,e){return e[1]-t[1]||e[0]-t[0]}function mc(t,e){var n,i,r,a=t.sort(xc).pop();for(yc=[],bc=new Array(t.length),_c=new Bo,pc=new Bo;;)if(r=ec,a&&(!r||a[1]<r.y||a[1]===r.y&&a[0]<r.x))a[0]===n&&a[1]===i||(hc(a),n=a[0],i=a[1]),a=t.pop();else{if(!r)break;uc(r.arc)}if(function(){for(var t,e,n,i,r=0,a=bc.length;r<a;++r)if((t=bc[r])&&(i=(e=t.halfedges).length)){var f=new Array(i),o=new Array(i);for(n=0;n<i;++n)f[n]=n,o[n]=Go(t,yc[e[n]]);for(f.sort(function(t,e){return o[e]-o[t]}),n=0;n<i;++n)o[n]=e[f[n]];for(n=0;n<i;++n)e[n]=o[n]}}(),e){var f=+e[0][0],o=+e[0][1],c=+e[1][0],s=+e[1][1];!function(t,e,n,i){for(var r,a=yc.length;a--;)Jo(r=yc[a],t,e,n,i)&&Qo(r,t,e,n,i)&&(Math.abs(r[0][0]-r[1][0])>vc||Math.abs(r[0][1]-r[1][1])>vc)||delete yc[a]}(f,o,c,s),function(t,e,n,i){var r,a,f,o,c,s,u,h,l,d,_,b,p=bc.length,y=!0;for(r=0;r<p;++r)if(a=bc[r]){for(f=a.site,o=(c=a.halfedges).length;o--;)yc[c[o]]||c.splice(o,1);for(o=0,s=c.length;o<s;)_=(d=tc(a,yc[c[o]]))[0],b=d[1],h=(u=Ko(a,yc[c[++o%s]]))[0],l=u[1],(Math.abs(_-h)>vc||Math.abs(b-l)>vc)&&(c.splice(o,0,yc.push(Vo(f,d,Math.abs(_-t)<vc&&i-b>vc?[t,Math.abs(h-t)<vc?l:i]:Math.abs(b-i)<vc&&n-_>vc?[Math.abs(l-i)<vc?h:n,i]:Math.abs(_-n)<vc&&b-e>vc?[n,Math.abs(h-n)<vc?l:e]:Math.abs(b-e)<vc&&_-t>vc?[Math.abs(l-e)<vc?h:t,e]:null))-1),++s);s&&(y=!1)}if(y){var v,g,x,m=1/0;for(r=0,y=null;r<p;++r)(a=bc[r])&&(x=(v=(f=a.site)[0]-t)*v+(g=f[1]-e)*g)<m&&(m=x,y=a);if(y){var w=[t,e],M=[t,i],T=[n,i],N=[n,e];y.halfedges.push(yc.push(Vo(f=y.site,w,M))-1,yc.push(Vo(f,M,T))-1,yc.push(Vo(f,T,N))-1,yc.push(Vo(f,N,w))-1)}}for(r=0;r<p;++r)(a=bc[r])&&(a.halfedges.length||delete bc[r])}(f,o,c,s)}this.edges=yc,this.cells=bc,_c=pc=yc=bc=null}mc.prototype={constructor:mc,polygons:function(){var t=this.edges;return this.cells.map(function(e){var n=e.halfedges.map(function(n){return Ko(e,t[n])});return n.data=e.site.data,n})},triangles:function(){var t=[],e=this.edges;return this.cells.forEach(function(n,i){if(a=(r=n.halfedges).length)for(var r,a,f,o,c,s,u=n.site,h=-1,l=e[r[a-1]],d=l.left===u?l.right:l.left;++h<a;)f=d,d=(l=e[r[h]]).left===u?l.right:l.left,f&&d&&i<f.index&&i<d.index&&(c=f,s=d,((o=u)[0]-s[0])*(c[1]-o[1])-(o[0]-c[0])*(s[1]-o[1])<0)&&t.push([u.data,f.data,d.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,e,n){for(var i,r,a=this,f=a._found||0,o=a.cells.length;!(r=a.cells[f]);)if(++f>=o)return null;var c=t-r.site[0],s=e-r.site[1],u=c*c+s*s;do{r=a.cells[i=f],f=null,r.halfedges.forEach(function(n){var i=a.edges[n],o=i.left;if(o!==r.site&&o||(o=i.right)){var c=t-o[0],s=e-o[1],h=c*c+s*s;h<u&&(u=h,f=o.index)}})}while(null!==f);return a._found=i,null==n||u<=n*n?r.site:null}};function wc(t,e,n){this.k=t,this.x=e,this.y=n}wc.prototype={constructor:wc,scale:function(t){return 1===t?this:new wc(this.k*t,this.x,this.y)},translate:function(t,e){return 0===t&0===e?this:new wc(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};new wc(1,0,0);wc.prototype;var Mc,Tc=function(){return function(){}}(),Nc=function(){var t=Object.prototype.toString,e=Object.prototype.hasOwnProperty,n={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Date]":"date","[object RegExp]":"regExp","[object Object]":"object"};function i(e){return null==e?String(e):n[t.call(e)]||"object"}var r=Array.isArray||function(t){return"array"===i(t)},a=function(t){if(!t||"object"!==i(t)||t.nodeType||function(t){return t&&"object"==typeof t&&"setInterval"in t}(t))return!1;if(t.constructor&&!e.call(t,"constructor")&&!e.call(t.constructor.prototype,"isPrototypeOf"))return!1;var n;for(n in t);return void 0===n||e.call(t,n)},f=function(t,e,n){for(var i in n)if(n.hasOwnProperty(i)){var o=e[i],c=n[i],s=void 0;if(e===c)continue;t&&c&&(a(c)||r(c))?(r(c)?(!1,s=o&&r(o)?o:[]):s=o&&a(o)?o:{},e[i]=f(t,s,c)):void 0!==c&&(e[i]=c)}return e};return{extend:f}}(),Ac=(Mc=function(t,e){return(Mc=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}Mc(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),Cc={Charts:{Pie:function(t){function e(e,n){var i=t.call(this)||this,r={el:e,width:500,height:500,data:[{name:"苹果",value:40},{name:"香蕉",value:30},{name:"橘子",value:20},{name:"葡萄",value:40},{name:"芒果",value:20}],margin:{top:20,left:40,right:20,bottom:20},colorList:Of,textInness:20,hasAnimatetion:!0};return Nc.extend(!0,r,n),Nc.extend(!0,i,r),i.init(),i}return Ac(e,t),e.prototype.init=function(){this.svg=et(this.el),this.svg.html(""),this.R=this.width-this.margin.left-this.margin.right,this.radius=this.R/2,this.pie=function(){var t=ho,e=uo,n=null,i=zf(0),r=zf(Kf),a=zf(0);function f(f){var o,c,s,u,h,l=f.length,d=0,_=new Array(l),b=new Array(l),p=+i.apply(this,arguments),y=Math.min(Kf,Math.max(-Kf,r.apply(this,arguments)-p)),v=Math.min(Math.abs(y)/l,a.apply(this,arguments)),g=v*(y<0?-1:1);for(o=0;o<l;++o)(h=b[_[o]=o]=+t(f[o],o,f))>0&&(d+=h);for(null!=e?_.sort(function(t,n){return e(b[t],b[n])}):null!=n&&_.sort(function(t,e){return n(f[t],f[e])}),o=0,s=d?(y-l*g)/d:0;o<l;++o,p=u)c=_[o],u=p+((h=b[c])>0?h*s:0)+g,b[c]={data:f[c],index:o,value:h,startAngle:p,endAngle:u,padAngle:v};return b}return f.value=function(e){return arguments.length?(t="function"==typeof e?e:zf(+e),f):t},f.sortValues=function(t){return arguments.length?(e=t,n=null,f):e},f.sort=function(t){return arguments.length?(n=t,e=null,f):n},f.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:zf(+t),f):i},f.endAngle=function(t){return arguments.length?(r="function"==typeof t?t:zf(+t),f):r},f.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:zf(+t),f):a},f}().sort(null).value(function(t){return t.value}),this.path=oo().outerRadius(this.radius).innerRadius(0),this.transition=oo().outerRadius(1).innerRadius(0),this.label=oo().outerRadius(this.radius+this.textInness).innerRadius(this.radius+this.textInness),this.group=this.svg.append("g").attr("transform","translate("+((this.width-this.R)/2+this.radius)+","+((this.width-this.R)/2+this.radius)+")"),this.processData(),this.addArc()},e.prototype.processData=function(){this.ascending?this.data.sort(function(t,e){return t.value-e.value}):this.descending&&this.data.sort(function(t,e){return e.value-t.value})},e.prototype.animate=function(){this.paths.transition().duration(500).delay(function(t,e){return 200*e}).attr("d",this.path)},e.prototype.addArc=function(){var t=this;this.arc=this.group.selectAll(".pie").data(this.pie(this.data)).enter().append("g").attr("class",".pie"),this.paths=this.arc.append("path").attr("d",this.transition).attr("class","piePath").attr("fill",function(e,n){return t.colorList[n]}),this.arc.append("text").attr("transform",function(e){return"translate("+t.label.centroid(e)+")"}).attr("dy","-.5em").attr("dx","3").attr("font-size",12).style("text-anchor","middle").text(function(t){return t.data.name}),this.hasAnimatetion?this.animate():this.arc.selectAll(".piePath").attr("d",this.path)},e}(Tc)}};e.default=Cc}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,